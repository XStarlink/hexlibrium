<!-- Nik Code -->
<!DOCTYPE html>
<html lang="en">

<head>

	<title>HEXILIBRIUM</title>
	<meta charset="utf-8">
	<!-- drag and drop -->
	<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'>	
	<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
	<meta name="description"
		content="Hexilibrium is a multi-player game." />
	
	<meta property="og:type" content="product" />
	<meta property="og:title" content="Hexilibrium - A E-learning multi-player game" />
	<meta property="og:description"
		content="Hexilibrium is a multi-player game. Using the Three.js library. author:Vinicius Nascimento Â©2018 category:application-javascript" />
	<meta property="og:image" content="http://niksgames.com/src/assets/src-og.jpg" />
	<meta property="og:image:type" content="image/jpeg" />
	<meta property="og:image:width" content="1265" />
	<meta property="og:image:height" content="817" />
	<meta property="og:image:alt" content="Hexilibrium" />

	<link rel="apple-touch-icon" sizes="180x180" href="./css/favicon/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="32x32" href="./css/favicon/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="./css/favicon/favicon-16x16.png">
	<link rel="manifest" href="./css/favicon/site.webmanifest">
	<link rel="mask-icon" href="./css/favicon/safari-pinned-tab.svg" color="#5bbad5">
	

	<link href="https://fonts.googleapis.com/css?family=IBM+Plex+Sans|Kavivanar" rel="stylesheet">
	<!-- <link type="text/css" rel="stylesheet" href="src/css/style.css"> -->
	<!-- <link rel="stylesheet" href="css/nprogress.css"/> -->

	<!-- <style media="screen">
		*{
		  margin: 0;
		}
		#videoDiv{
		  display: grid;
		  grid-gap: 2px;
		  height:100%;
		  grid-template-columns: repeat(auto-fill, 300px);
		  grid-auto-columns: 100px;
		}
		#footer{
		  width: 100%;
		  height: 50px;
		  background-color: white;
		  display: flex;
		  justify-content:space-around;
		  flex:1;
		  border-bottom: 1px solid grey;
		  margin-top: 2px;
		}
		button{
		  height: 30px;
		  width: 80px;
		  margin-top: 10px;
		  text-align: center;
		  border-radius: 10px;
		  outline: none;
		  border:none;
		  text-decoration: none;
		  background-color:red;
		  cursor: pointer;
		}
		video {
		  width: 50%;
		  height: 50%;
		  object-fit:cover;
		  border:2px solid white;
		}
	  </style> -->
	
	<style>
		body {

			font-family: Monospace;
			background-color: transparent;;
			color: #fff;
			margin: 0px;
			overflow: hidden;
		}

		#message {
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translateX(-50%) translateY(-50%);
			font-family: 'Kavivanar', san-serif;
			font-size: 40px;
			width: 80%;
			max-width: 280px;
			padding: 15px 15px 50px 15px;
			text-align: center;
			display: none;
			align-content: center;
			justify-content: center;
			background-color: aliceblue;
			border: medium solid #3D455C;
			border-radius: 20px;
			color: #3D455C;
			z-index: 99;
		}

		#message_ok {
			position: absolute;
			bottom: 10px;
			padding: 10px 20px 10px 20px;
			font-family: sans-serif;
			font-size: 20px;
			background-color: #3D455C;
			color: #fff;
			border-radius: 8px;
			border: medium solid #696882;
		}

		#chat {
			position: absolute;
			width: 100%;
			height: 40px;
			bottom: -40px;
			transition: all 0.5s;
		}

		hjform {
			background: rgb(180, 180, 180);
			padding: 3px;
			width: 150%;
		}

		hjform input {
			border: 0;
			padding: 10px;
			width: 88%;
			margin-right: 5%;
		}

		hjform button {
			width: 8%;
			background: rgb(32, 102, 126);
			border: none;
			padding: 10px;
		}

		/* rpg */
		/* body {
			font-family: Monospace;
			background-color: #000;
			color: #fff;
			margin: 0px;
			overflow: hidden;
		} */
		/* #message{
			position:absolute;
			left: 50%;
			top: 50%;
			transform: translateX(-50%) translateY(-50%);
			font-family: 'Kavivanar', san-serif;
			font-size: 40px;
			width:80%;
			max-width:280px;
			padding: 15px 15px 50px 15px;
			text-align: center;
			display:none;
			align-content: center;
			justify-content: center;
			background-color: aliceblue;
			border: medium solid #3D455C;
			border-radius: 20px;
			color: #3D455C;
			z-index: 99;
		} */
		/* #message_ok{
			position: absolute;
			bottom: 10px;
			padding: 10px 20px 10px 20px;
			font-family: sans-serif;
			font-size: 20px;
			background-color: #3D455C;
			color: #fff;
			border-radius: 8px;
			border: medium solid #696882;
		} */
		
        /* #sfx-btn{
			position: absolute;
			right: 10%;
			top: 15px;
			width: 40px;
			height: 40px;
			border: none;
			border-radius: 50%;
			background:#3B53A2;
			font-size: 25px;
			color: #fff;
		} */
           
		/* #camera-btn{
			position: absolute;
			right: 20%;
			bottom: 15px;
			width: 40px;
			height: 40px;
			border: none;
			border-radius: 50%;
			background:#963ba2;
			font-size: 25px;
			color: #fff;
		} */
		
		#action-btn{
			position: absolute;
			left: 50%;
			bottom: 5px;
			width: 40px;
			height: 40px;
			border: none;
			border-radius: 50%;
			background:#3b9ba2;
			font-size: 25px;
			color: #fff;
			transform: translateX(-50%);
            z-index: 9;
		}
			
		#overlay{
			position:absolute;
			width: 100%;
			height: 100%;
			background: transparent;
			z-index: 10;
			opacity: 1;
		}
           
		.fade-in {
			animation-name: fade-in;
			animation-duration: 2s;
		}

		@keyframes fade-in {
			from {opacity: 1;}
			to {opacity: 0;}
		}
            
        /* #briefcase-btn{
			position: absolute;
			left: 20%;
			bottom: 15px;
			width: 40px;
			height: 40px;
			border: none;
			border-radius: 50%;
			background:#3b8aa2;
			font-size: 25px;
			color: #fff;
		} */
            
        #briefcase{
            position: absolute;
			left: 10%;
            bottom: 60px;
            width: auto;
            opacity: 0;
            padding: 8px;
            border-radius: 8px;
            background:#3B53A2;
            transition: opacity 0.5s;
        }

		@media (max-width: 1147px)
		{
			#briefcase
		{
					position: absolute;
					right: 60%;
					top: 300px;
					width: auto;
					opacity: 0;
					padding: 8px;
					border-radius: 8px;
					background:#3B53A2;
					transition: opacity 0.5s;
					z-index: 9999;
					/* height:74px; */
		}
		}

		@media (max-width: 871px)
		{
			#briefcase
		{
					position: absolute;
					right: 28%;
					top: 300px;
					width: auto;
					opacity: 0;
					padding: 8px;
					border-radius: 8px;
					background:#3B53A2;
					transition: opacity 0.5s;
					z-index: 9999;
					/* height:74px; */
		}
		}
			
		@media (max-width: 481px)
		{
			#briefcase
		{
					position: absolute;
					right: 10%;
					top: 300px;
					width: auto;
					opacity: 0;
					padding: 8px;
					border-radius: 8px;
					background:#3B53A2;
					transition: opacity 0.5s;
					z-index: 9999;
					/* height:74px; */
		}
		}

		@media (max-width: 481px)
		{
			#briefcase
		{
					position: absolute;
					right: 10%;
					top: 300px;
					width: auto;
					opacity: 0;
					padding: 8px;
					border-radius: 8px;
					background:#3B53A2;
					transition: opacity 0.5s;
					z-index: 9999;
					/* height:74px; */
		}
		}

		@media (max-width: 385px)
		{
			#briefcase
		{
					position: absolute;
					right: 1%;
					top: 300px;
					width: auto;
					opacity: 0;
					padding: 8px;
					border-radius: 8px;
					background:#3B53A2;
					transition: opacity 0.5s;
					z-index: 9999;
					/* height:74px; */
		}
		}

   
        #briefcase ul{
            list-style: none;
            padding: 0;
            margin: 0;
            }

        #briefcase li{
            float: left;
            }

        #briefcase li a{
            padding: 0 3px 0 3px;
            }

        #briefcase img{
            width: 100px;
            height: 75px;
            }		
		/* sonic */
		/* body {
		margin: 0;
		padding: 0;
		background: black;
		overflow: hidden;
		height: 100%;
		font-family: "Times";
		font-style: italic;
		} */
		/* canvas {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		} */
		.button {
		position: fixed;
		bottom: 50%;
		right: 40px;
		outline: none;
		border: none;
		background: none;
		width: 50px;
		z-index: 100;
		}
		.button svg {
		width: 100%;
		fill: white;
		}
		#info {
		position: absolute;
		top: 30px;
		left: 50%;
		transform: translateX(-50%);
		-webkit-transform: translateX(-50%);
		color: white;
		z-index: 9999;
		opacity: 0;
	}

	/* shooter */


      /* #ui{
          position: absolute;
          top: 0;
          width: 100%;
          height: 100%;
          padding: 10px;
          display: none;
      }

      #ammo{
          position: absolute;
          top: 10px;
          left: 10px;
          height: 40px;
          width: 160px;
          display: flex;
          align-items: center;
      }

      #health{
          position: absolute;
          top: 10px;
          right: 10px;
          width: 160px;
          height: 40px;
          display: flex;
          align-items: center;
      }

      .icon{
          width: 30px;
          height: 30px;
          padding: 10px;
      }

      .progressBase{
          width: 100px;
          height: 15px;
          background-color: white;
          border-radius: 10px;
      }

      .progressBar{
          width: 100%;
          height: 15px;
          background-color: sienna;
          border-radius: 10px;
      }

      #playBtn{
          position:absolute;
          bottom: 80px;
          left: 50%;
          transform: translateX(-50%);
          display: none;
      }

      #gameover{
          position:absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          display: none;
      } */

	  /* shooter */

	  /* #ui{
          position: absolute;
          top: 0;
          width: 100%;
          height: 100%;
          padding: 10px;
          display: none;
      } */

      #ammo{
          position: absolute;
          top: 10px;
          left: 10px;
          height: 40px;
          width: 160px;
          display: flex;
          align-items: center;
      }

      #health{
          position: absolute;
          top: 10px;
          right: 10px;
          width: 160px;
          height: 40px;
          display: flex;
          align-items: center;
      }

      .icon{
          width: 30px;
          height: 30px;
          padding: 10px;
      }

      .progressBase{
          width: 100px;
          height: 15px;
          background-color: white;
          border-radius: 10px;
      }

      .progressBar{
          width: 100%;
          height: 15px;
          background-color: sienna;
          border-radius: 10px;
      }



      #gameover{
          position:absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          display: none;
      }

	  /* blockly */
	  /* .iframeBlock{
			overflow: auto !important;
			width: 50%;
			height: 450px;
		}
		
		#bhh{
			display:none;
			position: absolute;
			margin: auto;
			right:3%;
			background:coral;
			padding:10px;
			border: none;
			border-radius: 5px;
			top:3%;
			border: 2px solid chocolate;
			font-weight: 900;
			color:#fff;

		}
		#bjj{
			position: absolute;
			background:coral;
			padding:10px;
			right:3%;
			margin: auto;
			border: 2px solid chocolate;
			border-radius: 5px;
			top:3%;
			font-weight: 900;
			color:#fff;
			
		} */

	  /* blockly */
		/* h1 {
		font-weight: normal;
		font-size: 140%;
		}
		iframe {
		width: 300%;
		height: 500%;
		border-style: solid;
		border-color: #ddd;
		border-width: 0 1px 1px 0;
		} */
		/* button */
		/* #containerr{
		display: none;
				
		}
		#bc{
			display:none;
			position: absolute;
			margin: auto;
			right:10%;
			background:coral;
			padding:10px;
			border: none;
			border-radius: 5px;
			top:3%;
			border: 2px solid chocolate;
			font-weight: 900;
			color:#fff;

		}
		#bl{
			position: absolute;
			background:coral;
			padding:10px;
			right:10%;
			margin: auto;
			border: 2px solid chocolate;
			border-radius: 5px;
			top:3%;
			font-weight: 900;
			color:#fff;
			
		} */

		 /* d3 graph */

		 h1 {
		font-weight: normal;
		font-size: 140%;
		}
		/* iframe {
		width: 150%;
		height: 300%;
		border-style: solid;
		border-color: #ddd;
		border-width: 0 1px 1px 0;
		} */
		/* button */ 

		 #graph{
		display: none;
				
		}
		#bcc{
			display:none;
			position: absolute;
			margin: auto;
			right:30%;
			background:rgb(80, 229, 255);
			padding:10px;
			border: none;
			border-radius: 5px;
			top:3%;
			border: 2px solid rgb(30, 189, 210);
			font-weight: 900;
			color:#fff;

		}
		#bll{
			position: absolute;
			background:rgb(80, 255, 255);
			padding:10px;
			right:30%;
			margin: auto;
			border: 2px solid rgb(30, 168, 210);
			border-radius: 5px;
			top:3%;
			font-weight: 900;
			color:#fff;
			
		}

		/* .links { 
		stroke: #999; 
		stroke-opacity: 0.6; 
		stroke-width: 1px; 
		}

		text {
		pointer-events: none;
		fill: #000;
		font: 10px sans-serif;
		}

		svg{
		border:1px solid #000;
		} */

		/* .hjform {
			background: rgb(180, 180, 180);
			padding: 3px;
			width: 150%;
		}

		.hjform input {
			border: 0;
			padding: 10px;
			width: 88%;
			margin-right: 5%;
		}

		.hjform button {
			width: 8%;
			background: rgb(32, 102, 126);
			border: none;
			padding: 10px;
		} */

		/* planet */
		/* canvas {
	margin: 0;
	height: 100%;
	width: 100%;
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}
		
	.control-panel {
		position: absolute;
		width: 180px;
		height: 100%;
		background-color: rgba(200, 200, 200, 0.2);
	}

	.slider-container {
		position: absolute;
		width: 150px;
		margin-left: 10px;
	}

	.container-title {
		text-align: center;
		margin-top: 5px;
		margin-bottom: 2px;
		font-weight: 700;
	}

	.slider-label {
		font-size: 12px;
	}

	#noise-prop {
		top: 0%;
	}

	#planet-prop {
		top: 32%;
	}

	.switch-field {
		top: 65%;
	}

	#generate {
		position: absolute;
		top: 85%;
		margin-left: 10px;
		width: 150px;
		padding: 20px 0;
		background: #FF6E6E;
		border-radius: 2px;
		text-align: center;
		color: white;
		font-weight: 700;
	}

	#generate:hover {
		cursor: pointer;
		background: #F25A5A;
	}

	#controls-note {
		position: absolute;
		top: 95%;
		margin-left: 10px;
		width: 150px;
		font-size: 11px;
		text-align: center;
	}

	#seed {
		font-size: 12px;
		padding: 0;
		width: 60%;
	}

	#seed-random {
		vertical-align: middle;
	}

	.slider-value {
		font-size: 10px;
		vertical-align: text-top;
		margin-left: 2px;
	} */





	/* RANGE SLIDER */

	/* .range-slider {
		width: 85%;
		height: 10px;
		border-radius: 5px;
		background: #d7dcdf;
		outline: none;
		padding: 0;
		margin: 5px 0;
	}

	.range-slider::-webkit-slider-thumb {
		-webkit-appearance: none;
			appearance: none;
		width: 20px;
		height: 20px;
		border-radius: 50%;
		background: #2c3e50;
		cursor: pointer;
		-webkit-transition: background .15s ease-in-out;
		transition: background .15s ease-in-out;
	}

	.range-slider::-webkit-slider-thumb:hover {
		background: #1abc9c;
	}

	.range-slider:active::-webkit-slider-thumb {
		background: #1abc9c;
	}

	.range-slider::-moz-range-thumb {
		width: 20px;
		height: 20px;
		border: 0;
		border-radius: 50%;
		background: #2c3e50;
		cursor: pointer;
		-webkit-transition: background .15s ease-in-out;
		transition: background .15s ease-in-out;
	}

	.range-slider::-moz-range-thumb:hover {
		background: #1abc9c;
	}

	.range-slider:active::-moz-range-thumb {
		background: #1abc9c;
	}

	::-moz-range-track {
		background: #d7dcdf;
		border: 0;
	}

	input::-moz-focus-inner,
	input::-moz-focus-outer {
		border: 0;
	} */



	/* RADIO TOGGLE BUTTONS */

	/* .switch-field {
		margin-left: 10px;
		overflow: hidden;
		position: absolute;
	}

	.switch-field input {
		display: none;
	}

	.switch-field label {
		display: inline-block;
		width: 45px; */
		/* float: left; */
		/* background-color: #e4e4e4;
		color: rgba(0, 0, 0, 0.6);
		font-size: 12px;
		font-weight: normal;
		text-align: center;
		text-shadow: none;
		padding: 6px 14px;
		border: 1px solid rgba(0, 0, 0, 0.2);
		-webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);
		box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);
		-webkit-transition: all 0.1s ease-in-out;
		-moz-transition:    all 0.1s ease-in-out;
		-ms-transition:     all 0.1s ease-in-out;
		-o-transition:      all 0.1s ease-in-out;
		transition:         all 0.1s ease-in-out;
	}

	.switch-field label:hover {
		cursor: pointer;
		background-color: #C4F5A9;
	}

	.switch-field input:checked + label {
		background-color: #A5DC86;
		-webkit-box-shadow: none;
		box-shadow: none;
	} */

	/* canvasPlanet */

	/* Make clicks pass-through */
/* #nprogress {
  pointer-events: none;
}

#nprogress .bar {
  background: #29d;

  position: fixed;
  z-index: 1031;
  top: 0;
  left: 0;

  width: 100%;
  height: 2px;
}

/* Fancy blur effect */
	#nprogress .peg {
	display: block;
	position: absolute;
	right: 0px;
	width: 100px;
	height: 100%;
	box-shadow: 0 0 10px #29d, 0 0 5px #29d;
	opacity: 1.0;

	-webkit-transform: rotate(3deg) translate(0px, -4px);
		-ms-transform: rotate(3deg) translate(0px, -4px);
			transform: rotate(3deg) translate(0px, -4px);
	}

	/* Remove these to get rid of the spinner */
	#nprogress .spinner {
	display: block;
	position: fixed;
	z-index: 1031;
	top: 15px;
	right: 15px;
	}

	#nprogress .spinner-icon {
	width: 18px;
	height: 18px;
	box-sizing: border-box;

	border: solid 2px transparent;
	border-top-color: #29d;
	border-left-color: #29d;
	border-radius: 50%;

	-webkit-animation: nprogress-spinner 400ms linear infinite;
			animation: nprogress-spinner 400ms linear infinite;
	}

	.nprogress-custom-parent {
	overflow: hidden;
	position: relative;
	}

	.nprogress-custom-parent #nprogress .spinner,
	.nprogress-custom-parent #nprogress .bar {
	position: absolute;
	}

	@-webkit-keyframes nprogress-spinner {
	0%   { -webkit-transform: rotate(0deg); }
	100% { -webkit-transform: rotate(360deg); }
	}
	@keyframes nprogress-spinner {
	0%   { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
	} */

	/* cubes */
/* 
	body {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        background-color: #f0f0f0;
        margin: 0px;
        overflow: hidden;
      } */

      #oldie { background-color: #ddd !important }

      #header {
        position: absolute;
        top: 20px !important;
        left: 20px !important;
        z-index: 200;
        color: white;
        font-size: 25px;
      }

      #header #users {
        font-size: 18px;
      }

      #logo {
        background: url(assets/logo.png);
        background-size: cover;
        width: 200px;
        height: 45px;
        margin-bottom: 5px;
      }

      #info {
        color: white;
        position: absolute;
        left: 20px !important;
        bottom: 20px !important;
        z-index: 201;
        background: rgba(0, 0, 0, 0.3);
        padding: 10px;
      }

      #info a {
        color: white;
      }

      #fullscreen {
        position: absolute;
        bottom: 20px;
        right: 20px;
        background: url(assets/fullscreen.png);
        width: 32px;
        height: 32px;
        cursor: pointer;
      }

      #blocks {
        position: absolute;
        top: 20px !important;
        left: 50%;
        width: 630px;
        margin-left: -315px;
      }

      #blocks ul {
        list-style: none;
      }

      #blocks ul li {
        display: inline-block;
        width: 32px;
        height: 32px;
        padding: 0;
        margin: 0;
        border: 5px solid rgba(0, 0, 0, 0.3);
        color: white;
        padding: 5px;
        line-height: 32px;
        font-size: 18px;
        line-height: 50px;
        background-size: cover;
        margin-right: 10px;
      }

      #blocks ul li.selected {
        border-color: white;
      }

      #blocks ul li.one {
        background: url(textures/blocks/grass_side.png);
        background-size: cover;
      }

      #blocks ul li.two {
        background: url(textures/blocks/log_big_oak.png);
        background-size: cover;
      }

      #blocks ul li.three {
        background: url(textures/blocks/leaves_big_oak_opaque.png);
        background-size: cover;
      }

      #blocks ul li.four {
        background: url(textures/blocks/dirt.png);
        background-size: cover;
      }

      #blocks ul li.five {
        background: url(textures/blocks/sand.png);
        background-size: cover;
      }

      #blocks ul li.six {
        background: url(textures/blocks/snow.png);
        background-size: cover;
      }

      #blocks ul li.seven {
        background: url(textures/blocks/ice.png);
        background-size: cover;
      }

      #blocks ul li.eight {
        background: url(textures/blocks/furnace_front_on.png);
        background-size: cover;
      }

      #blocks ul li.nine {
        background: url(textures/blocks/cobblestone.png);
        background-size: cover;
      }

	  .webgl
		{
			position: fixed;
			top: 0;
			left: 0;
			outline: none;
		}


	</style>
</head>

<body>

	<!-- <canvas id="canvas"></canvas> -->


	<form style="position: absolute;" action="https://www.paypal.com/donate?hosted_button_id=7JJUBUCRWFVYA" method="post" target="_top">
		<input type="hidden" name="hosted_button_id" value="7JJUBUCRWFVYA" />
		<input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" border="0" name="submit" title="PayPal - The safer, easier way to pay online!" alt="ENROLL with PayPal button" />
		<img alt="" border="0" src="https://www.paypal.com/en_BR/i/scr/pixel.gif" width="1" height="1" />
		</form>

		<link rel="stylesheet" type="text/css" href="../../build/css/main.css">
        <script src="/libs14/blockly/blockly_compressed.js"></script>
        <script src="/libs14/build/blockly/blocks_compressed.js"></script>
        <script src="/libs14/build/blockly/msg/js/en.js"></script>
        <script src="/libs14/build/blockly/javascript_compressed.js"></script>
        <script src="/libs14/build/custom_blocks.js"></script>



		<!-- <script src="/libs14/blockly/blockly_compressed.js"></script>
		<script src="/libs14/blockly/blocks_compressed.js"></script>
		<script src="/libs14/blockly/javascript_compressed.js"></script>
		<script src="/libs14/blockly/en.js"></script> -->
		
		<script src="/libs15/gamepad.min.js"></script>
		<!-- <script>
		let toolbox = document.getElementById('toolbox')

		// init the Gamepad
		Blockly.Gamepad.init({
			toolbox,
			blocks
		})

		// create the workspace
		Blockly.inject('blocklyDiv', {
			toolbox
		})

		// the gamepad is ready to use
		let gamepad = new Blockly.Gamepad()
		</script> -->

	<!-- <table width="100%" height="99%"> -->

		<!-- <a href="/logout"> 
		<button class="btn btn-primary">LOGOUT</button> 
		</a> -->

		<!-- <div>Bem vindo <%=doc.name%></div> -->

		<!-- <div style="position: absolute;" id="videoDiv"> </div> -->


	

		<!-- <button id="btn" onclick="playSound()">Play</button>
		</div> -->
		<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.0.0/d3.min.js"></script>
		<script src="https://code.jquery.com/jquery-2.2.1.min.js"></script>

		<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
		<script src="/socket.io/socket.io.js"></script>
		<!-- blockland -->
		
		

		<div id='ui'>
			
			<!-- <div class="game-edit">
				<button id="button_run" onclick="run_code()">
				  Run Code Block
				</button>
				<button id="button_reset" onclick="reset_car()">
				  Reset
				</button>
				<div id="blockly_editor">
			
				  <iframe id="blockly" src="/src/html/blockly.html" width="100%"></iframe>
				</div>
			  </div>
			<div> 
		
			<script type="text/javascript" src="/src/js/index.js"></script> -->
	


					<!-- blockland -->
			<div id="message">
				<p id="message_text"></p>
				<button id="message_ok">OK</button>
			</div>

			<div class = "hjform" id="chat">
				<form id="msg-form" action="">
					<input id="m" autocomplete="off" /><button>Send</button>
				</form>
			</div>

			


			<!-- blocky -->

			<!-- <div id = "iframe"></div> -->
			
			<!-- <button id="bhh" class="btn btn-primary">Close</button>
			<button id="bjj" class="btn btn-primary">Open level</button> -->
			
			<!-- <button id="bl" class="btn btn-primary">Start CODE!</button>
			<button id="bc" class="btn btn-primary">Apply</button>
			<div style="position: absolute" id="containerr">  -->
				
	
				

				
				<!-- <iframe src="/src/html/index.html" ></iframe> -->
				<!-- <iframe src="/src/js/SpeechBubble.js" ></iframe> -->

				<!-- <script type="module">


					document.addEventListener("DOMContentLoaded", () => {	


					import * as THREE from '/libs5/three128/three.module.js';					
					import { SpeechBubble } from '/src/js/SpeechBubble.js';

					const scene = new THREE.Scene();
					const camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 0.1, 1000 );
					const renderer = new THREE.WebGLRenderer({antialias: true});


					const speechBubble00 = new SpeechBubble(this.game, "Hexlibrium", 0.2, 12, true);
					speechBubble00.mesh.position.set(0.1, 0.1, 0.2);
					speechBubble00.mesh.rotation.set(0, Math.PI, 0);

					const box = new THREE.Mesh(new THREE.BoxBufferGeometry( 0.1, 0.1, 0.1 ), new THREE.MeshBasicMaterial({color: 0xffffff}));
					scene.add(box)
					});


					window.addEventListener( 'resize', resize, false);
					update();

					function update(){
					requestAnimationFrame( update );
					updateCamera();
					renderer.render( scene, camera ); 
					
					function resize(){
					camera.aspect = window.innerWidth / window.innerHeight;
					camera.updateProjectionMatrix();
					renderer.setSize( window.innerWidth, window.innerHeight );
					}
					}
	
					// document.addEventListener("DOMContentLoaded", () => {
					// 	const speech = new SpeechBubble(); 
						
					// });
				</script> -->
			
					<!-- <tr>
						<td>
							<button id='saveButton'>Save</button>
							<button id='resetButton'>Reset</button>
							<button id='runButton'>Run</button>
							<span id='modifiedStatus'>saved</span>
						</td>
						</tr>
					<tr>
					
					<tr>
					<td height="50%" width="50%">
					<iframe src="/index.html"></iframe>
					</td>

					<td height="100%" width="100%">
					<iframe class='viewFrame' src="/libs11/apps/frame-view/index-smooth.html"></iframe>
					</td>
					</tr>
					</tr> -->
					
						<!-- <script src="/src/js/Blocks.js"></script> -->
		
	
					
				

					<!-- graph -->
			</div>		
<!-- 
			<button id="bll" class="btn btn-secondary">Open Map</button>
			<button id="bcc" class="btn btn-secondary">Close Map</button>
			<div style="position: absolute" id="graph"> 

				<tr>
					<td height="50%" width="50%">
						<iframe src="/src/js/graph.html"></iframe>
					</td>
				</tr>	
			</div> -->


			<!-- shooter -->

			<!-- <div id='ammo'>
				<div class='icon'>
					<img src='/src/assets/factory/ammo.svg' alt='ammo-icon'>
				</div>
				<div class="progressBase">
					<div class="progressBar" name="ammoBar"></div>
				</div>
			</div>

			<div id='health'>
				<div class="progressBase">
					<div class="progressBar" name="healthBar"></div>
				</div>
				<div class='icon'>
					<img src='/src/assets/factory/health.svg' alt='health-icon'>
				</div>
			</div> -->

			<div id='playBtn'><img src='/src/assets/factory/playgame.png' alt='play game'></div>
			<div id='gameover'><img src='/src/assets/factory/gameover.png' alt='gameover'></div>

			<!-- rpg -->
					<!-- <div id="overlay"></div> -->
			<div id="action-btn"><i class="fas fa-hand-point-up"></i></div>

			<div id="sfx-btn"><i class="fas fa-volume-up"></i></div>
			<div id="briefcase-btn"><i class="fas fa-briefcase"></i></div>
			<div id="camera-btn"><i class="fas fa-camera" img src='/src/images/a1.png'></i></div>

			<div id="briefcase">
				<ul>
					<li><a href="#"><img></img></li>
					<li><a href="#"><img></img></li>
					<li><a href="#"><img></img></li>
				</ul>
			</div>
			

			<div id="windowBtn"><i class="fas fa-window"></i></div>

			<!-- VR Button -->
			<!-- <button 
			id='VR' 
			class='button toggleVR' 
			onclick='toggleVR()' 
			title='Toggle VR Mode for Mobile Devices Only'>
			<svg 
			xmlns="http://www.w3.org/2000/svg" 
			xmlns:xlink="http://www.w3.org/1999/xlink" 
			version="1.1" x="0px" 
			y="0px" 
			viewBox="0 0 62.7 52.375" 
			enable-background="new 0 0 62.7 41.9" 
			xml:space="preserve">

			<path d="M53.4,5.5h-44c-2.1,0-3.7,1.7-3.7,3.7v22.6c0,2.1,1.7,3.7,3.7,3.7h13.4c1.1,0,2.1-0.6,2.5-1.6l3-7.5c1.2-2.6,4.9-2.5,6,0.1  l2.6,7.3c0.4,1,1.4,1.7,2.5,1.7h13.9c2.1,0,3.7-1.7,3.7-3.7V9.3C57.2,7.2,55.5,5.5,53.4,5.5z M20.4,27c-3.2,0-5.7-2.6-5.7-5.7  s2.6-5.7,5.7-5.7s5.7,2.6,5.7,5.7S23.6,27,20.4,27z M42.4,27c-3.2,0-5.7-2.6-5.7-5.7s2.6-5.7,5.7-5.7s5.7,2.6,5.7,5.7  S45.6,27,42.4,27z"/>
				<text 
					x="0" 
					y="56.9" 
					fill="#000000" 
					font-size="5px" 
					font-weight="bold" 
					font-family="'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif">Created by Nick Bluth
				</text>

				<text 
					x="0" 
					y="61.9" 
					fill="#000000" 
					font-size="5px" 
					font-weight="bold" 
					font-family="'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif">from the Noun Project
				</text>
			</svg>
			</button>

			<div id="info">SUPER!</div>
			<audio id="bflat" src="https://raw.githubusercontent.com/baronwatts/models/master/sonic_ring_sound.mp3">
			</audio> -->

			<!-- sonic -->

			<!-- planet -->
			<!-- <div class="control-panel">
				<div class="slider-container" id="noise-prop">
					<div class="container-title">Noise Properties</div>
					<label class="slider-label" for="seed">Seed</label>
					<input type="number" step="any" id="seed" placeholder="random number">
					<input type="checkbox" id="seed-random">
	
					<label class="slider-label" for="lacunarity">Lacunarity</label>
					<input class="range-slider" id="lacunarity" type="range" value="1.5" step="0.1" min="1" max="3">
					<span class="slider-value" id="lacunarity-value">1.5</span>
					<label class="slider-label" for="persistance">Persistance</label>
					<input class="range-slider" id="persistance" type="range" value="0.5" step="0.1" min="0" max="1">
					<span class="slider-value" id="persistance-value">0.5</span>
					<label class="slider-label" for="octaves">Octaves</label>
					<input class="range-slider" id="octaves" type="range" value="3" step="1" min="1" max="10">
					<span class="slider-value" id="octaves-value">3</span>
				</div>
	
				<div class="slider-container" id="planet-prop">
					<div class="container-title">Planet Properties</div>
					<label class="slider-label" for="size">Size</label>
					<input class="range-slider" id="size" type="range" value="200" min="1" max="500">
					<span class="slider-value" id="size-value">200</span>
					<label class="slider-label" for="tessellations">Tessellations</label>
					<input class="range-slider" id="tessellations" type="range" value="4" min="2" max="500">
					<span class="slider-value" id="tessellations-value">4</span>
					<label class="slider-label" for="min-height">Min Height</label>
					<input class="range-slider" id="min-height" type="range" value="1.0" step="0.1" min="0.1" max="3">
					<span class="slider-value" id="min-height-value">1.0</span>
					<label class="slider-label" for="max-height">Max Height</label>
					<input class="range-slider" id="max-height" type="range" value="1.5" step="0.1" min="0.1" max="3">
					<span class="slider-value" id="max-height-value">1.5</span>
				</div>
	
				<div class="switch-field">
					<div class="container-title">Planet Type</div>
					<input type="radio" name="type" id="triangles" value="NORMAL" />
					<label for="triangles">Triangles</label>
					<input type="radio" name="type" id="hexagons" value="TILE-HEIGHT" />
					<label for="hexagons">Hexagons</label>
					<br>
					<input type="radio" name="type" id="flat-hexagons" value="TILE-FLAT" />
					<label for="flat-hexagons">Flat Hexagons</label>
					<input type="radio" name="type" id="pop-out-hexagons" value="TILE-FLAT-HEIGHT" checked />
					<label for="pop-out-hexagons">Pop-out Hexagons</label>
				</div>
	
				<div id="generate">Generate</div>
	
				<div id="controls-note">
					+/- to zoom in/out
					<br>
					Arrow keys rotate planet
				</div>
				<script src="/src/js/userInterface.js"></script>
			</div> -->

			<!-- planet -->
			<!-- 
			<svg id="rhs">
  
			</svg> -->

		</div>

		<!-- <div id="info">
			<strong>click</strong>: add voxel
			<br>
			<strong>shift + click</strong>: remove voxel
			<br>
			<strong>control</strong>: rotate
			<br>
			<a href="http://painterlypack.net/" target="_blank">PainterlyPack</a> - Textures
			<br>
			<a href="http://threejs.org" target="_blank">three.js</a> - WebGL
			</div>
	
			<div id="blocks">
			<ul>
				<li class="one selected">1</li>
				<li class="two">2</li>
				<li class="three">3</li>
				<li class="four">4</li>
				<li class="five">5</li>
				<li class="six">6</li>
				<li class="seven">7</li>
				<li class="eight">8</li>
				<li class="nine">9</li>
			</ul>
			</div>
	  </div> -->




	<!-- <script>

	//	$d3 = d3
	//	$jq = $ # jquery

		width = $jq("#rhs").width()
		height = $jq("#rhs").height()
		color = d3.scale.category20()

		json =
		nodes: [
			# holds are group 0
			{ id:0, name: '>', group: 0, count: 4 }
			{ id:1, name: 'b', group: 0, count: 0 }
			{ id:2, name: 'c', group: 0, count: 0 }
			{ id:3, name: 'i', group: 0, count: 0 }
			{ id:4, name: 'j', group: 0, count: 0 }
			{ id:5, name: '^', group: 0, count: 0 }

			# tasks are group 1
			{ id:6, name: 'x', group: 1 }
			{ id:7, name: 'y', group: 1 }
			{ id:8, name: 'z', group: 1 }
			{ id:9, name: '!', group: 1 }
		]
		edges: [
			{ source: 0, target: 9 }
			{ source: 9, target: 1 }
			{ source: 1, target: 6 }
			{ source: 6, target: 2 }
			{ source: 6, target: 3 }
			{ source: 2, target: 8 }
			{ source: 3, target: 7 }
			{ source: 7, target: 4 }
			{ source: 4, target: 8 }
			{ source: 8, target: 5 }
		];


		force = d3.layout.force()
		.charge( -250 )
		.linkDistance( 45 )
		.size([ width, height ])

		# start this, because it destructively turns those references into live objects!
		force
		.nodes( json.nodes )
		.links( json.edges )
		.start()



		AND = (a, b) -> a and b
		all = (xs) -> xs.length and xs.reduce( AND, true )

		incoming = (n) -> e for e in json.edges when e.target is n
		outgoing = (n) -> e for e in json.edges when e.source is n
		active = (n) -> all ( e.source.count > 0 for e in incoming n  )

		holds = -> n for n in json.nodes when n.group is 0
		tasks = -> n for n in json.nodes when n.group is 1

		radius = 15

		svg = d3.select("svg")
		links = svg.selectAll( "line.link" )
			.data( json.edges )
			.enter().append( "line" )
			.attr( "class", "link" )
			.style( "stroke", "#000" )
			.style( "stroke-width", 2 );


		circs = svg.selectAll("circle.node")
			.data( holds )
			.enter().append( "circle" )
			.attr( "class", "node" )
			.attr( "r", radius )
			.style( "fill", (d)->
				if d.name is '>' then 'lime'
				else if d.name is '^' then 'red'
				else 'white' )
			.style( "stroke", '#000' )
			.style( "stroke-width", '2' )
			.call( force.drag )

		dead_color = '#333'
		live_color = '#666'
		click_color = '#999'

		box_color = (d, i) -> if active d then live_color else dead_color

		texts = svg.selectAll("text")
		.data( holds )
		.enter().append( "text" )
		.call( force.drag )
		.text( (d)-> if d.count is 0 then '' else d.count )

		rects = svg.selectAll("rect.node")
		.data( tasks )
		.enter().append( "rect" )
			.attr( "class", "node" )
			.attr( "width", radius * 2 )
			.attr( "height", radius * 2 )
			.style( "stroke", '#000' )
			.style( "stroke-width", '2' )
			.style( "fill", box_color )
			.call( force.drag )
			.on 'click', (g, j)->
				if (active g) then do =>
					for e in incoming g
					e.source.count -= 1
					for e in outgoing g
					e.target.count += 1
					$d3.select( this )
					.style( 'fill', click_color )
					rects.transition()
					.style( 'fill', box_color )
					texts.transition()
					.text( (d)-> if d.count is 0 then '' else d.count )


		node = svg.selectAll(".node")
		node.append( "title" )
		.text( (d) -> d.name )


		force.on "tick", ->
		texts
			.attr( "x", (d) -> d.x - 5 )
			.attr( "y", (d) -> d.y + 5 )
		links
			.attr( "x1", (d) -> d.source.x )
			.attr( "y1", (d) -> d.source.y )
			.attr( "x2", (d) -> d.target.x )
			.attr( "y2", (d) -> d.target.y )
		circs
			.attr( "cx", (d) -> d.x )
			.attr( "cy", (d) -> d.y );
		rects
			.attr( "x", (d) -> d.x - radius )
			.attr( "y", (d) -> d.y - radius )


	</script> -->
	<!-- <div id "div"></div> -->



			
		
			<script type="text/javascript">
				var roomID = "<%= RoomId %>"
			</script>




			<script type="module">
				import { Game } from '/src/js/Game.js';

				document.addEventListener("DOMContentLoaded", () => {
					const game = new Game(); 
					window.game = game;
				});
			</script>

		</div>
	</body>
</html>
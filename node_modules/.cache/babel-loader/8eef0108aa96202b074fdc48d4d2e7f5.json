{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vingt\\\\Dropbox\\\\AION\\\\BLUEPRINTS\\\\hexlibrium\\\\src\\\\component\\\\ThreeScene.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { MapControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { DragControls } from \"three/examples/jsm/controls/DragControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport droneModel from \"../assets/drone.glb\";\nimport cityModel from \"../assets/lavoro.glb\"; //import bubble from \"./Bubble\";\n\nimport img01 from \"../images/aviator/aviator.png\"; //import PanelComponent from \"./PanelComponent\";\n//import Game from \"../blockly-react/src/js/game\";\n// <script src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/2666677/CurveExtras.js'></script>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeScene extends Component {\n  componentDidMount() {\n    var scene, renderer, camera, city;\n    let raycaster, selectedPath;\n    let drone;\n    let models = [],\n        objects = [],\n        selected = [],\n        points = [],\n        linesPr = [];\n    let i = 0,\n        t = 0,\n        dt = 0.002,\n        a,\n        b;\n    let pathCheck = false;\n    const buttons = document.getElementsByTagName(\"button\");\n\n    for (let r = 0; r < buttons.length; r++) {\n      buttons[r].addEventListener(\"click\", onButtonClick, false);\n    }\n\n    function onButtonClick() {\n      if (linesPr.length >= 1) {\n        scene.remove(linesPr[0]);\n        linesPr = [];\n        points = [];\n      }\n\n      if (drone.visible === true) {\n        objects.forEach(element => points.push(element.position));\n        points.push(objects[0].position);\n        const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\n        const materialLine = new THREE.LineBasicMaterial({\n          color: 0xffffff\n        });\n        const line = new THREE.Line(geometryLine, materialLine);\n        linesPr.push(line);\n        scene.add(line);\n        pathCheck = true;\n      }\n    }\n\n    let input = document.querySelector('input');\n    input.addEventListener('change', onAlt);\n\n    function onAlt() {\n      if (drone.visible === true) {\n        selected[0].position.y = input.value;\n      }\n    }\n\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    this.mount.appendChild(renderer.domElement);\n    renderer.setPixelRatio(devicePixelRatio);\n    const mouse = new THREE.Vector2();\n    camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 10000);\n    camera.position.z = 235;\n    camera.position.y = 50;\n    camera.position.x = -234;\n    camera.target = new THREE.Vector3();\n    const mapControls = new MapControls(camera, renderer.domElement);\n    mapControls.maxPolarAngle = Math.PI / 2;\n    const dragControls = new DragControls(objects, camera, renderer.domElement);\n    dragControls.addEventListener('dragstart', function (event) {\n      mapControls.enabled = false;\n      selected[0].material.color.setHex(0x42aaf5);\n      selected.pop();\n    });\n    dragControls.addEventListener('dragend', function (event) {\n      mapControls.enabled = true;\n      selectedPath = event.object;\n      selectedPath.material.color.setHex(0xc91625);\n      selected.push(selectedPath);\n      document.getElementById(\"posX\").innerHTML = 'Position X   ' + Math.round(event.object.position.x);\n      document.getElementById(\"posZ\").innerHTML = 'Position Z   ' + Math.round(event.object.position.z);\n      input.value = Math.round(event.object.position.y);\n    });\n    scene = new THREE.Scene();\n    scene.add(new THREE.AmbientLight(0x404040));\n    raycaster = new THREE.Raycaster();\n    const loader = new GLTFLoader();\n    loadDrone();\n    loadCity();\n    cube();\n\n    function cube() {\n      // const  PanelComponent = () => {\n      //     return (\n      //     <div className={s.panel}>\n      //         <div className={s.pos}>\n      //         <div className={s.fixed} id=\"posX\" >Position X</div>\n      //         <div className={s.fixed} id=\"posZ\" >Position Z</div>\n      //         <div className={s.intext}>Position Y <input className={s.n} type=\"number\"   /></div>\n      //         </div>\n      //         <button className={s.pressedButton}>Create Path</button>\n      //     </div>\n      //     )\n      // }\n      // const game = new Game();\n      //bubble = new Bubble()\n      const cube = new THREE.Mesh(new THREE.BoxGeometry(10, 10, 10), new THREE.MeshBasicMaterial({\n        color: 0x003399\n      }));\n      scene.add(cube);\n      const planeGeometry = new THREE.PlaneGeometry(100, 100);\n      const planeMaterial = new THREE.MeshBasicMaterial({\n        color: 0xff9944,\n        side: THREE.DoubleSide\n      });\n      const mesh = new THREE.Mesh(planeGeometry, planeMaterial);\n      mesh.position.set(0, 0, 0);\n      scene.add(mesh);\n      const loader = new THREE.TextureLoader();\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"webgl\");\n      mesh.material.map = new THREE.CanvasTexture(canvas);\n      loader.load(img01, function (texture) {\n        const img = mesh.material.map = texture;\n      });\n    }\n\n    function loadDrone() {\n      loader.load(droneModel, function (gltf) {\n        drone = gltf.scene;\n        scene.add(drone);\n        drone.scale.set(0.2, 0.2, 0.2);\n        drone.position.y = 30;\n        drone.visible = false;\n        drone.rotation.y = 90;\n        models.push(drone);\n      });\n    }\n\n    function loadCity() {\n      loader.load(cityModel, function (gltf) {\n        city = gltf.scene;\n        scene.add(city);\n      });\n    }\n\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    window.addEventListener('resize', onWindowResize, false);\n    document.addEventListener('touchend', onTouchMove, false);\n    document.addEventListener('dblclick', createPath, false);\n\n    function createPath() {\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(scene.children, true);\n\n      if (intersects.length > 0) {\n        const sphereGeometry = new THREE.SphereGeometry(1.2, 32, 32);\n        const sphereMaterial = new THREE.MeshBasicMaterial({\n          color: 0x42aaf5\n        });\n        const spherePath = new THREE.Mesh(sphereGeometry, sphereMaterial);\n        scene.add(spherePath);\n        spherePath.position.y = intersects[0].point.y + 30;\n        spherePath.position.x = intersects[0].point.x;\n        spherePath.position.z = intersects[0].point.z;\n        objects.push(spherePath);\n        document.getElementById(\"posX\").innerHTML = 'Position X ' + Math.round(spherePath.position.x);\n        document.getElementById(\"posZ\").innerHTML = 'Position Z ' + Math.round(spherePath.position.z);\n        input.value = Math.round(spherePath.position.y);\n\n        if (!drone.visible) {\n          drone.visible = true;\n          drone.position.copy(spherePath.position);\n          selected.push(spherePath);\n        }\n      } else {\n        return;\n      }\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onDocumentMouseMove(event) {\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    }\n\n    function onTouchMove(event) {\n      let x, y;\n\n      if (event.changedTouches) {\n        x = event.changedTouches[0].pageX;\n        y = event.changedTouches[0].pageY;\n      } else {\n        x = event.clientX;\n        y = event.clientY;\n      }\n\n      mouse.x = x / window.innerWidth * 2 - 1;\n      mouse.y = -(y / window.innerHeight) * 2 + 1;\n    }\n\n    function ease(t) {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    }\n\n    function lint(a, b, t) {\n      return a + (b - a) * t;\n    }\n\n    function animDrone() {\n      a = {\n        x: objects[i].position.x,\n        y: objects[i].position.y,\n        z: objects[i].position.z\n      };\n      b = {\n        x: objects[i + 1].position.x,\n        y: objects[i + 1].position.y,\n        z: objects[i + 1].position.z\n      };\n      const newX = lint(a.x, b.x, ease(t));\n      const newY = lint(a.y, b.y, ease(t));\n      const newZ = lint(a.z, b.z, ease(t));\n      models[0].position.set(newX, newY, newZ);\n    }\n\n    function loopDrone() {\n      b = {\n        x: objects[0].position.x,\n        y: objects[0].position.y,\n        z: objects[0].position.z\n      };\n      a = {\n        x: objects[objects.length - 1].position.x,\n        y: objects[objects.length - 1].position.y,\n        z: objects[objects.length - 1].position.z\n      };\n      const newX = lint(a.x, b.x, ease(t));\n      const newY = lint(a.y, b.y, ease(t));\n      const newZ = lint(a.z, b.z, ease(t));\n      models[0].position.set(newX, newY, newZ);\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (pathCheck === true) {\n        if (i === objects.length - 1) {\n          loopDrone();\n          drone.lookAt(new THREE.Vector3(objects[0].position.x, objects[0].position.y, objects[0].position.z));\n          t += dt;\n\n          if (t >= 1) {\n            i = 0;\n            t = 0;\n          }\n        } else {\n          animDrone();\n          drone.lookAt(new THREE.Vector3(objects[i].position.x, objects[i].position.y, objects[i].position.z));\n          t += dt;\n\n          if (t >= 1) {\n            i++;\n            t = 0;\n            t += dt;\n          }\n        }\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeScene;","map":{"version":3,"sources":["C:/Users/vingt/Dropbox/AION/BLUEPRINTS/hexlibrium/src/component/ThreeScene.js"],"names":["React","Component","THREE","MapControls","DragControls","GLTFLoader","droneModel","cityModel","img01","ThreeScene","componentDidMount","scene","renderer","camera","city","raycaster","selectedPath","drone","models","objects","selected","points","linesPr","i","t","dt","a","b","pathCheck","buttons","document","getElementsByTagName","r","length","addEventListener","onButtonClick","remove","visible","forEach","element","push","position","geometryLine","BufferGeometry","setFromPoints","materialLine","LineBasicMaterial","color","line","Line","add","input","querySelector","onAlt","y","value","WebGLRenderer","antialias","setSize","window","innerWidth","innerHeight","body","appendChild","domElement","mount","setPixelRatio","devicePixelRatio","mouse","Vector2","PerspectiveCamera","z","x","target","Vector3","mapControls","maxPolarAngle","Math","PI","dragControls","event","enabled","material","setHex","pop","object","getElementById","innerHTML","round","Scene","AmbientLight","Raycaster","loader","loadDrone","loadCity","cube","Mesh","BoxGeometry","MeshBasicMaterial","planeGeometry","PlaneGeometry","planeMaterial","side","DoubleSide","mesh","set","TextureLoader","canvas","createElement","ctx","getContext","map","CanvasTexture","load","texture","img","gltf","scale","rotation","onDocumentMouseMove","onWindowResize","onTouchMove","createPath","setFromCamera","intersects","intersectObjects","children","sphereGeometry","SphereGeometry","sphereMaterial","spherePath","point","copy","aspect","updateProjectionMatrix","clientX","clientY","changedTouches","pageX","pageY","ease","lint","animDrone","newX","newY","newZ","loopDrone","animate","requestAnimationFrame","lookAt","render","ref"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport {MapControls} from \"three/examples/jsm/controls/OrbitControls\";\r\nimport {DragControls} from \"three/examples/jsm/controls/DragControls\";\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport droneModel from \"../assets/drone.glb\";\r\nimport cityModel from \"../assets/lavoro.glb\";\r\n//import bubble from \"./Bubble\";\r\nimport img01 from \"../images/aviator/aviator.png\";\r\n//import PanelComponent from \"./PanelComponent\";\r\n//import Game from \"../blockly-react/src/js/game\";\r\n\r\n\r\n// <script src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/2666677/CurveExtras.js'></script>\r\n\r\n\r\nclass ThreeScene extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n        var scene, renderer, camera, city;\r\n        let raycaster, selectedPath;\r\n        let drone;\r\n        let models = [],\r\n            objects = [],\r\n            selected = [],\r\n            points = [],\r\n            linesPr = []\r\n        let i = 0, t = 0, dt = 0.002,\r\n            a, b\r\n        let pathCheck = false\r\n\r\n        const buttons = document.getElementsByTagName(\"button\");\r\n        for (let r = 0; r < buttons.length; r++) {\r\n            buttons[r].addEventListener(\"click\", onButtonClick, false);\r\n        }\r\n\r\n        function onButtonClick() {\r\n\r\n            if (linesPr.length >= 1) {\r\n                scene.remove(linesPr[0])\r\n                linesPr = []\r\n                points = []\r\n            }\r\n\r\n            if (drone.visible === true) {\r\n                objects.forEach(element => points.push(element.position))\r\n                points.push(objects[0].position)\r\n                const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\r\n                const materialLine = new THREE.LineBasicMaterial({color: 0xffffff});\r\n                const line = new THREE.Line(geometryLine, materialLine);\r\n                linesPr.push(line);\r\n                scene.add(line);\r\n                pathCheck = true;\r\n            }\r\n        }\r\n\r\n        let input = document.querySelector('input');\r\n        input.addEventListener('change', onAlt)\r\n\r\n        function onAlt() {\r\n            if (drone.visible === true) {\r\n                selected[0].position.y = input.value\r\n            }\r\n        }\r\n\r\n\r\n        renderer = new THREE.WebGLRenderer({antialias: true});\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        document.body.appendChild(renderer.domElement);\r\n        this.mount.appendChild(renderer.domElement);\r\n        renderer.setPixelRatio(devicePixelRatio);\r\n        const mouse = new THREE.Vector2();\r\n\r\n\r\n        camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 10000);\r\n\r\n        camera.position.z = 235;\r\n        camera.position.y = 50;\r\n        camera.position.x = -234;\r\n        camera.target = new THREE.Vector3();\r\n\r\n        const mapControls = new MapControls(camera, renderer.domElement);\r\n        mapControls.maxPolarAngle = Math.PI / 2;\r\n\r\n        const dragControls = new DragControls(objects, camera, renderer.domElement);\r\n        dragControls.addEventListener('dragstart', function (event) {\r\n            mapControls.enabled = false;\r\n            selected[0].material.color.setHex(0x42aaf5)\r\n            selected.pop()\r\n\r\n        });\r\n        dragControls.addEventListener('dragend', function (event) {\r\n            mapControls.enabled = true;\r\n            selectedPath = event.object\r\n            selectedPath.material.color.setHex(0xc91625)\r\n            selected.push(selectedPath)\r\n            document.getElementById(\"posX\").innerHTML = 'Position X   ' + Math.round(event.object.position.x)\r\n            document.getElementById(\"posZ\").innerHTML = 'Position Z   ' + Math.round(event.object.position.z)\r\n            input.value = Math.round(event.object.position.y)\r\n        });\r\n\r\n\r\n        scene = new THREE.Scene();\r\n        scene.add(new THREE.AmbientLight(0x404040));\r\n        raycaster = new THREE.Raycaster();\r\n        const loader = new GLTFLoader();\r\n\r\n        loadDrone();\r\n        loadCity();\r\n        cube();\r\n\r\n        function cube(){\r\n\r\n        // const  PanelComponent = () => {\r\n            \r\n            \r\n            \r\n        //     return (\r\n        \r\n        \r\n        //     <div className={s.panel}>\r\n        //         <div className={s.pos}>\r\n        //         <div className={s.fixed} id=\"posX\" >Position X</div>\r\n        //         <div className={s.fixed} id=\"posZ\" >Position Z</div>\r\n        //         <div className={s.intext}>Position Y <input className={s.n} type=\"number\"   /></div>\r\n        //         </div>\r\n        //         <button className={s.pressedButton}>Create Path</button>\r\n        \r\n        //     </div>\r\n        \r\n        //     )\r\n        // }\r\n\r\n            // const game = new Game();\r\n\r\n            //bubble = new Bubble()\r\n\r\n            const cube = new THREE.Mesh(new THREE.BoxGeometry(10,10,10,), new THREE.MeshBasicMaterial({color: 0x003399}))\r\n            scene.add(cube)\r\n\r\n            const planeGeometry = new THREE.PlaneGeometry(100, 100);\r\n            const planeMaterial = new THREE.MeshBasicMaterial({color: 0xff9944, side: THREE.DoubleSide})\r\n            const mesh = new THREE.Mesh(planeGeometry, planeMaterial);\r\n            mesh.position.set(0,0,0);\r\n            scene.add(mesh)\r\n\r\n            const loader = new THREE.TextureLoader();\r\n\r\n            let canvas = document.createElement(\"canvas\");\r\n            let ctx = canvas.getContext(\"webgl\");\r\n            mesh.material.map = new THREE.CanvasTexture(canvas)\r\n\r\n            loader.load(img01, function(texture){\r\n\r\n                const img = mesh.material.map = texture;\r\n                         \r\n   \r\n\r\n            })\r\n        }\r\n\r\n        function loadDrone() {\r\n\r\n            loader.load(droneModel, function (gltf) {\r\n                drone = gltf.scene\r\n                scene.add(drone);\r\n                drone.scale.set(0.2, 0.2, 0.2)\r\n                drone.position.y = 30\r\n                drone.visible = false\r\n                drone.rotation.y = 90\r\n                models.push(drone)\r\n            });\r\n        }\r\n\r\n        function loadCity() {\r\n\r\n            loader.load(cityModel, function (gltf) {\r\n                city = gltf.scene\r\n                scene.add(city);\r\n            });\r\n        }\r\n\r\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\r\n        window.addEventListener('resize', onWindowResize, false);\r\n        document.addEventListener('touchend', onTouchMove, false);\r\n        document.addEventListener('dblclick', createPath, false)\r\n\r\n        function createPath() {\r\n\r\n            raycaster.setFromCamera(mouse, camera);\r\n            const intersects = raycaster.intersectObjects(scene.children, true);\r\n\r\n            if (intersects.length > 0) {\r\n\r\n                const sphereGeometry = new THREE.SphereGeometry(1.2, 32, 32);\r\n                const sphereMaterial = new THREE.MeshBasicMaterial({color: 0x42aaf5});\r\n                const spherePath = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n                scene.add(spherePath);\r\n                spherePath.position.y = intersects[0].point.y + 30\r\n                spherePath.position.x = intersects[0].point.x\r\n                spherePath.position.z = intersects[0].point.z\r\n                objects.push(spherePath)\r\n                document.getElementById(\"posX\").innerHTML = 'Position X ' + Math.round(spherePath.position.x)\r\n                document.getElementById(\"posZ\").innerHTML = 'Position Z ' + Math.round(spherePath.position.z)\r\n                input.value = Math.round(spherePath.position.y)\r\n                if (!drone.visible) {\r\n                    drone.visible = true;\r\n                    drone.position.copy(spherePath.position)\r\n                    selected.push(spherePath)\r\n                }\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n\r\n\r\n        function onWindowResize() {\r\n\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        }\r\n\r\n        function onDocumentMouseMove(event) {\r\n\r\n            mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n        }\r\n\r\n        function onTouchMove(event) {\r\n\r\n            let x, y;\r\n            if (event.changedTouches) {\r\n                x = event.changedTouches[0].pageX;\r\n                y = event.changedTouches[0].pageY;\r\n            } else {\r\n                x = event.clientX;\r\n                y = event.clientY;\r\n            }\r\n            mouse.x = (x / window.innerWidth) * 2 - 1;\r\n            mouse.y = -(y / window.innerHeight) * 2 + 1;\r\n        }\r\n\r\n\r\n        function ease(t) {\r\n            return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t\r\n        }\r\n\r\n        function lint(a, b, t) {\r\n            return a + (b - a) * t\r\n        }\r\n\r\n\r\n        function animDrone() {\r\n\r\n            a = {x: objects[i].position.x, y: objects[i].position.y, z: objects[i].position.z}\r\n            b = {x: objects[i + 1].position.x, y: objects[i + 1].position.y, z: objects[i + 1].position.z}\r\n            const newX = lint(a.x, b.x, ease(t));\r\n            const newY = lint(a.y, b.y, ease(t));\r\n            const newZ = lint(a.z, b.z, ease(t));\r\n            models[0].position.set(newX, newY, newZ);\r\n        }\r\n\r\n        function loopDrone() {\r\n\r\n            b = {x: objects[0].position.x, y: objects[0].position.y, z: objects[0].position.z}\r\n            a = {\r\n                x: objects[objects.length - 1].position.x,\r\n                y: objects[objects.length - 1].position.y,\r\n                z: objects[objects.length - 1].position.z\r\n            }\r\n            const newX = lint(a.x, b.x, ease(t));\r\n            const newY = lint(a.y, b.y, ease(t));\r\n            const newZ = lint(a.z, b.z, ease(t));\r\n            models[0].position.set(newX, newY, newZ);\r\n        }\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate);\r\n\r\n            if (pathCheck === true) {\r\n                if (i === objects.length - 1) {\r\n                    loopDrone()\r\n                    drone.lookAt(new THREE.Vector3(objects[0].position.x, objects[0].position.y, objects[0].position.z))\r\n                    t += dt\r\n                    if (t >= 1) {\r\n                        i = 0\r\n                        t = 0\r\n                    }\r\n                } else {\r\n\r\n                    animDrone()\r\n                    drone.lookAt(new THREE.Vector3(objects[i].position.x, objects[i].position.y , objects[i].position.z))\r\n                    t += dt;\r\n                    if (t >= 1) {\r\n                        i++\r\n                        t = 0\r\n                        t += dt\r\n                    }\r\n                }\r\n            }\r\n\r\n            renderer.render(scene, camera);\r\n\r\n        };\r\n        animate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={ref => (this.mount = ref)}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThreeScene"]},"metadata":{},"sourceType":"module"}
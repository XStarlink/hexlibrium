{"ast":null,"code":"// Do not edit this file; automatically generated by gulp.\n\n/* eslint-disable */\n;\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['./blockly_compressed.js'], factory);\n  } else if (typeof exports === 'object') {\n    // Node.js\n    module.exports = factory(require('./blockly_compressed.js'));\n  } else {\n    // Browser\n    root.Blockly.JavaScript = factory(root.Blockly);\n  }\n})(this, function (Blockly) {\n  'use strict';\n\n  Blockly.JavaScript = new Blockly.Generator(\"JavaScript\");\n  Blockly.JavaScript.addReservedWords(\"break,case,catch,class,const,continue,debugger,default,delete,do,else,export,extends,finally,for,function,if,import,in,instanceof,new,return,super,switch,this,throw,try,typeof,var,void,while,with,yield,enum,implements,interface,let,package,private,protected,public,static,await,null,true,false,arguments,\" + Object.getOwnPropertyNames(Blockly.utils.global).join(\",\"));\n  Blockly.JavaScript.ORDER_ATOMIC = 0;\n  Blockly.JavaScript.ORDER_NEW = 1.1;\n  Blockly.JavaScript.ORDER_MEMBER = 1.2;\n  Blockly.JavaScript.ORDER_FUNCTION_CALL = 2;\n  Blockly.JavaScript.ORDER_INCREMENT = 3;\n  Blockly.JavaScript.ORDER_DECREMENT = 3;\n  Blockly.JavaScript.ORDER_BITWISE_NOT = 4.1;\n  Blockly.JavaScript.ORDER_UNARY_PLUS = 4.2;\n  Blockly.JavaScript.ORDER_UNARY_NEGATION = 4.3;\n  Blockly.JavaScript.ORDER_LOGICAL_NOT = 4.4;\n  Blockly.JavaScript.ORDER_TYPEOF = 4.5;\n  Blockly.JavaScript.ORDER_VOID = 4.6;\n  Blockly.JavaScript.ORDER_DELETE = 4.7;\n  Blockly.JavaScript.ORDER_AWAIT = 4.8;\n  Blockly.JavaScript.ORDER_EXPONENTIATION = 5;\n  Blockly.JavaScript.ORDER_MULTIPLICATION = 5.1;\n  Blockly.JavaScript.ORDER_DIVISION = 5.2;\n  Blockly.JavaScript.ORDER_MODULUS = 5.3;\n  Blockly.JavaScript.ORDER_SUBTRACTION = 6.1;\n  Blockly.JavaScript.ORDER_ADDITION = 6.2;\n  Blockly.JavaScript.ORDER_BITWISE_SHIFT = 7;\n  Blockly.JavaScript.ORDER_RELATIONAL = 8;\n  Blockly.JavaScript.ORDER_IN = 8;\n  Blockly.JavaScript.ORDER_INSTANCEOF = 8;\n  Blockly.JavaScript.ORDER_EQUALITY = 9;\n  Blockly.JavaScript.ORDER_BITWISE_AND = 10;\n  Blockly.JavaScript.ORDER_BITWISE_XOR = 11;\n  Blockly.JavaScript.ORDER_BITWISE_OR = 12;\n  Blockly.JavaScript.ORDER_LOGICAL_AND = 13;\n  Blockly.JavaScript.ORDER_LOGICAL_OR = 14;\n  Blockly.JavaScript.ORDER_CONDITIONAL = 15;\n  Blockly.JavaScript.ORDER_ASSIGNMENT = 16;\n  Blockly.JavaScript.ORDER_YIELD = 17;\n  Blockly.JavaScript.ORDER_COMMA = 18;\n  Blockly.JavaScript.ORDER_NONE = 99;\n  Blockly.JavaScript.ORDER_OVERRIDES = [[Blockly.JavaScript.ORDER_FUNCTION_CALL, Blockly.JavaScript.ORDER_MEMBER], [Blockly.JavaScript.ORDER_FUNCTION_CALL, Blockly.JavaScript.ORDER_FUNCTION_CALL], [Blockly.JavaScript.ORDER_MEMBER, Blockly.JavaScript.ORDER_MEMBER], [Blockly.JavaScript.ORDER_MEMBER, Blockly.JavaScript.ORDER_FUNCTION_CALL], [Blockly.JavaScript.ORDER_LOGICAL_NOT, Blockly.JavaScript.ORDER_LOGICAL_NOT], [Blockly.JavaScript.ORDER_MULTIPLICATION, Blockly.JavaScript.ORDER_MULTIPLICATION], [Blockly.JavaScript.ORDER_ADDITION, Blockly.JavaScript.ORDER_ADDITION], [Blockly.JavaScript.ORDER_LOGICAL_AND, Blockly.JavaScript.ORDER_LOGICAL_AND], [Blockly.JavaScript.ORDER_LOGICAL_OR, Blockly.JavaScript.ORDER_LOGICAL_OR]];\n  Blockly.JavaScript.isInitialized = !1;\n\n  Blockly.JavaScript.init = function (a) {\n    Object.getPrototypeOf(this).init.call(this);\n    this.nameDB_ ? this.nameDB_.reset() : this.nameDB_ = new Blockly.Names(this.RESERVED_WORDS_);\n    this.nameDB_.setVariableMap(a.getVariableMap());\n    this.nameDB_.populateVariables(a);\n    this.nameDB_.populateProcedures(a);\n\n    for (var b = [], c = Blockly.Variables.allDeveloperVariables(a), d = 0; d < c.length; d++) b.push(this.nameDB_.getName(c[d], Blockly.Names.DEVELOPER_VARIABLE_TYPE));\n\n    a = Blockly.Variables.allUsedVarModels(a);\n\n    for (d = 0; d < a.length; d++) b.push(this.nameDB_.getName(a[d].getId(), Blockly.VARIABLE_CATEGORY_NAME));\n\n    b.length && (this.definitions_.variables = \"var \" + b.join(\", \") + \";\");\n    this.isInitialized = !0;\n  };\n\n  Blockly.JavaScript.finish = function (a) {\n    var b = Blockly.utils.object.values(this.definitions_);\n    a = Object.getPrototypeOf(this).finish.call(this, a);\n    this.isInitialized = !1;\n    this.nameDB_.reset();\n    return b.join(\"\\n\\n\") + \"\\n\\n\\n\" + a;\n  };\n\n  Blockly.JavaScript.scrubNakedValue = function (a) {\n    return a + \";\\n\";\n  };\n\n  Blockly.JavaScript.quote_ = function (a) {\n    a = a.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\n/g, \"\\\\\\n\").replace(/'/g, \"\\\\'\");\n    return \"'\" + a + \"'\";\n  };\n\n  Blockly.JavaScript.multiline_quote_ = function (a) {\n    return a.split(/\\n/g).map(this.quote_).join(\" + '\\\\n' +\\n\");\n  };\n\n  Blockly.JavaScript.scrub_ = function (a, b, c) {\n    var d = \"\";\n\n    if (!a.outputConnection || !a.outputConnection.targetConnection) {\n      var e = a.getCommentText();\n      e && (e = Blockly.utils.string.wrap(e, this.COMMENT_WRAP - 3), d += this.prefixLines(e + \"\\n\", \"// \"));\n\n      for (var f = 0; f < a.inputList.length; f++) a.inputList[f].type == Blockly.inputTypes.VALUE && (e = a.inputList[f].connection.targetBlock()) && (e = this.allNestedComments(e)) && (d += this.prefixLines(e, \"// \"));\n    }\n\n    a = a.nextConnection && a.nextConnection.targetBlock();\n    c = c ? \"\" : this.blockToCode(a);\n    return d + b + c;\n  };\n\n  Blockly.JavaScript.getAdjusted = function (a, b, c, d, e) {\n    c = c || 0;\n    e = e || this.ORDER_NONE;\n    a.workspace.options.oneBasedIndex && c--;\n    var f = a.workspace.options.oneBasedIndex ? \"1\" : \"0\";\n    a = 0 < c ? this.valueToCode(a, b, this.ORDER_ADDITION) || f : 0 > c ? this.valueToCode(a, b, this.ORDER_SUBTRACTION) || f : d ? this.valueToCode(a, b, this.ORDER_UNARY_NEGATION) || f : this.valueToCode(a, b, e) || f;\n    if (Blockly.isNumber(a)) a = Number(a) + c, d && (a = -a);else {\n      if (0 < c) {\n        a = a + \" + \" + c;\n        var g = this.ORDER_ADDITION;\n      } else 0 > c && (a = a + \" - \" + -c, g = this.ORDER_SUBTRACTION);\n\n      d && (a = c ? \"-(\" + a + \")\" : \"-\" + a, g = this.ORDER_UNARY_NEGATION);\n      g = Math.floor(g);\n      e = Math.floor(e);\n      g && e >= g && (a = \"(\" + a + \")\");\n    }\n    return a;\n  };\n\n  Blockly.JavaScript.colour = {};\n\n  Blockly.JavaScript.colour_picker = function (a) {\n    return [Blockly.JavaScript.quote_(a.getFieldValue(\"COLOUR\")), Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.colour_random = function (a) {\n    return [Blockly.JavaScript.provideFunction_(\"colourRandom\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"() {\", \"  var num = Math.floor(Math.random() * Math.pow(2, 24));\", \"  return '#' + ('00000' + num.toString(16)).substr(-6);\", \"}\"]) + \"()\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.colour_rgb = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"RED\", Blockly.JavaScript.ORDER_NONE) || 0,\n        c = Blockly.JavaScript.valueToCode(a, \"GREEN\", Blockly.JavaScript.ORDER_NONE) || 0;\n    a = Blockly.JavaScript.valueToCode(a, \"BLUE\", Blockly.JavaScript.ORDER_NONE) || 0;\n    return [Blockly.JavaScript.provideFunction_(\"colourRgb\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(r, g, b) {\", \"  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\", \"  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\", \"  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\", \"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\", \"  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\", \"  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\", \"  return '#' + r + g + b;\", \"}\"]) + \"(\" + b + \", \" + c + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.colour_blend = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"COLOUR1\", Blockly.JavaScript.ORDER_NONE) || \"'#000000'\",\n        c = Blockly.JavaScript.valueToCode(a, \"COLOUR2\", Blockly.JavaScript.ORDER_NONE) || \"'#000000'\";\n    a = Blockly.JavaScript.valueToCode(a, \"RATIO\", Blockly.JavaScript.ORDER_NONE) || .5;\n    return [Blockly.JavaScript.provideFunction_(\"colourBlend\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(c1, c2, ratio) {\", \"  ratio = Math.max(Math.min(Number(ratio), 1), 0);\", \"  var r1 = parseInt(c1.substring(1, 3), 16);\", \"  var g1 = parseInt(c1.substring(3, 5), 16);\", \"  var b1 = parseInt(c1.substring(5, 7), 16);\", \"  var r2 = parseInt(c2.substring(1, 3), 16);\", \"  var g2 = parseInt(c2.substring(3, 5), 16);\", \"  var b2 = parseInt(c2.substring(5, 7), 16);\", \"  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\", \"  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\", \"  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\", \"  r = ('0' + (r || 0).toString(16)).slice(-2);\", \"  g = ('0' + (g || 0).toString(16)).slice(-2);\", \"  b = ('0' + (b || 0).toString(16)).slice(-2);\", \"  return '#' + r + g + b;\", \"}\"]) + \"(\" + b + \", \" + c + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.lists = {};\n\n  Blockly.JavaScript.lists_create_empty = function (a) {\n    return [\"[]\", Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.lists_create_with = function (a) {\n    for (var b = Array(a.itemCount_), c = 0; c < a.itemCount_; c++) b[c] = Blockly.JavaScript.valueToCode(a, \"ADD\" + c, Blockly.JavaScript.ORDER_NONE) || \"null\";\n\n    return [\"[\" + b.join(\", \") + \"]\", Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.lists_repeat = function (a) {\n    var b = Blockly.JavaScript.provideFunction_(\"listsRepeat\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(value, n) {\", \"  var array = [];\", \"  for (var i = 0; i < n; i++) {\", \"    array[i] = value;\", \"  }\", \"  return array;\", \"}\"]),\n        c = Blockly.JavaScript.valueToCode(a, \"ITEM\", Blockly.JavaScript.ORDER_NONE) || \"null\";\n    a = Blockly.JavaScript.valueToCode(a, \"NUM\", Blockly.JavaScript.ORDER_NONE) || \"0\";\n    return [b + \"(\" + c + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.lists_length = function (a) {\n    return [(Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_MEMBER) || \"[]\") + \".length\", Blockly.JavaScript.ORDER_MEMBER];\n  };\n\n  Blockly.JavaScript.lists_isEmpty = function (a) {\n    return [\"!\" + (Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_MEMBER) || \"[]\") + \".length\", Blockly.JavaScript.ORDER_LOGICAL_NOT];\n  };\n\n  Blockly.JavaScript.lists_indexOf = function (a) {\n    var b = \"FIRST\" == a.getFieldValue(\"END\") ? \"indexOf\" : \"lastIndexOf\",\n        c = Blockly.JavaScript.valueToCode(a, \"FIND\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    b = (Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_MEMBER) || \"[]\") + \".\" + b + \"(\" + c + \")\";\n    return a.workspace.options.oneBasedIndex ? [b + \" + 1\", Blockly.JavaScript.ORDER_ADDITION] : [b, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.lists_getIndex = function (a) {\n    var b = a.getFieldValue(\"MODE\") || \"GET\",\n        c = a.getFieldValue(\"WHERE\") || \"FROM_START\",\n        d = Blockly.JavaScript.valueToCode(a, \"VALUE\", \"RANDOM\" == c ? Blockly.JavaScript.ORDER_NONE : Blockly.JavaScript.ORDER_MEMBER) || \"[]\";\n\n    switch (c) {\n      case \"FIRST\":\n        if (\"GET\" == b) return [d + \"[0]\", Blockly.JavaScript.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".shift()\", Blockly.JavaScript.ORDER_MEMBER];\n        if (\"REMOVE\" == b) return d + \".shift();\\n\";\n        break;\n\n      case \"LAST\":\n        if (\"GET\" == b) return [d + \".slice(-1)[0]\", Blockly.JavaScript.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".pop()\", Blockly.JavaScript.ORDER_MEMBER];\n        if (\"REMOVE\" == b) return d + \".pop();\\n\";\n        break;\n\n      case \"FROM_START\":\n        a = Blockly.JavaScript.getAdjusted(a, \"AT\");\n        if (\"GET\" == b) return [d + \"[\" + a + \"]\", Blockly.JavaScript.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".splice(\" + a + \", 1)[0]\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \".splice(\" + a + \", 1);\\n\";\n        break;\n\n      case \"FROM_END\":\n        a = Blockly.JavaScript.getAdjusted(a, \"AT\", 1, !0);\n        if (\"GET\" == b) return [d + \".slice(\" + a + \")[0]\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n        if (\"GET_REMOVE\" == b) return [d + \".splice(\" + a + \", 1)[0]\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \".splice(\" + a + \", 1);\";\n        break;\n\n      case \"RANDOM\":\n        d = Blockly.JavaScript.provideFunction_(\"listsGetRandomItem\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(list, remove) {\", \"  var x = Math.floor(Math.random() * list.length);\", \"  if (remove) {\", \"    return list.splice(x, 1)[0];\", \"  } else {\", \"    return list[x];\", \"  }\", \"}\"]) + \"(\" + d + \", \" + (\"GET\" != b) + \")\";\n        if (\"GET\" == b || \"GET_REMOVE\" == b) return [d, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \";\\n\";\n    }\n\n    throw Error(\"Unhandled combination (lists_getIndex).\");\n  };\n\n  Blockly.JavaScript.lists_setIndex = function (a) {\n    function b() {\n      if (c.match(/^\\w+$/)) return \"\";\n      var g = Blockly.JavaScript.nameDB_.getDistinctName(\"tmpList\", Blockly.VARIABLE_CATEGORY_NAME),\n          h = \"var \" + g + \" = \" + c + \";\\n\";\n      c = g;\n      return h;\n    }\n\n    var c = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_MEMBER) || \"[]\",\n        d = a.getFieldValue(\"MODE\") || \"GET\",\n        e = a.getFieldValue(\"WHERE\") || \"FROM_START\",\n        f = Blockly.JavaScript.valueToCode(a, \"TO\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"null\";\n\n    switch (e) {\n      case \"FIRST\":\n        if (\"SET\" == d) return c + \"[0] = \" + f + \";\\n\";\n        if (\"INSERT\" == d) return c + \".unshift(\" + f + \");\\n\";\n        break;\n\n      case \"LAST\":\n        if (\"SET\" == d) return a = b(), a + (c + \"[\" + c + \".length - 1] = \" + f + \";\\n\");\n        if (\"INSERT\" == d) return c + \".push(\" + f + \");\\n\";\n        break;\n\n      case \"FROM_START\":\n        e = Blockly.JavaScript.getAdjusted(a, \"AT\");\n        if (\"SET\" == d) return c + \"[\" + e + \"] = \" + f + \";\\n\";\n        if (\"INSERT\" == d) return c + \".splice(\" + e + \", 0, \" + f + \");\\n\";\n        break;\n\n      case \"FROM_END\":\n        e = Blockly.JavaScript.getAdjusted(a, \"AT\", 1, !1, Blockly.JavaScript.ORDER_SUBTRACTION);\n        a = b();\n        if (\"SET\" == d) return a + (c + \"[\" + c + \".length - \" + e + \"] = \" + f + \";\\n\");\n        if (\"INSERT\" == d) return a + (c + \".splice(\" + c + \".length - \" + e + \", 0, \" + f + \");\\n\");\n        break;\n\n      case \"RANDOM\":\n        a = b();\n        e = Blockly.JavaScript.nameDB_.getDistinctName(\"tmpX\", Blockly.VARIABLE_CATEGORY_NAME);\n        a += \"var \" + e + \" = Math.floor(Math.random() * \" + c + \".length);\\n\";\n        if (\"SET\" == d) return a + (c + \"[\" + e + \"] = \" + f + \";\\n\");\n        if (\"INSERT\" == d) return a + (c + \".splice(\" + e + \", 0, \" + f + \");\\n\");\n    }\n\n    throw Error(\"Unhandled combination (lists_setIndex).\");\n  };\n\n  Blockly.JavaScript.lists.getIndex_ = function (a, b, c) {\n    return \"FIRST\" == b ? \"0\" : \"FROM_END\" == b ? a + \".length - 1 - \" + c : \"LAST\" == b ? a + \".length - 1\" : c;\n  };\n\n  Blockly.JavaScript.lists_getSublist = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_MEMBER) || \"[]\",\n        c = a.getFieldValue(\"WHERE1\"),\n        d = a.getFieldValue(\"WHERE2\");\n    if (\"FIRST\" == c && \"LAST\" == d) b += \".slice(0)\";else if (b.match(/^\\w+$/) || \"FROM_END\" != c && \"FROM_START\" == d) {\n      switch (c) {\n        case \"FROM_START\":\n          var e = Blockly.JavaScript.getAdjusted(a, \"AT1\");\n          break;\n\n        case \"FROM_END\":\n          e = Blockly.JavaScript.getAdjusted(a, \"AT1\", 1, !1, Blockly.JavaScript.ORDER_SUBTRACTION);\n          e = b + \".length - \" + e;\n          break;\n\n        case \"FIRST\":\n          e = \"0\";\n          break;\n\n        default:\n          throw Error(\"Unhandled option (lists_getSublist).\");\n      }\n\n      switch (d) {\n        case \"FROM_START\":\n          a = Blockly.JavaScript.getAdjusted(a, \"AT2\", 1);\n          break;\n\n        case \"FROM_END\":\n          a = Blockly.JavaScript.getAdjusted(a, \"AT2\", 0, !1, Blockly.JavaScript.ORDER_SUBTRACTION);\n          a = b + \".length - \" + a;\n          break;\n\n        case \"LAST\":\n          a = b + \".length\";\n          break;\n\n        default:\n          throw Error(\"Unhandled option (lists_getSublist).\");\n      }\n\n      b = b + \".slice(\" + e + \", \" + a + \")\";\n    } else {\n      e = Blockly.JavaScript.getAdjusted(a, \"AT1\");\n      a = Blockly.JavaScript.getAdjusted(a, \"AT2\");\n      var f = Blockly.JavaScript.lists.getIndex_,\n          g = {\n        FIRST: \"First\",\n        LAST: \"Last\",\n        FROM_START: \"FromStart\",\n        FROM_END: \"FromEnd\"\n      };\n      b = Blockly.JavaScript.provideFunction_(\"subsequence\" + g[c] + g[d], [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(sequence\" + (\"FROM_END\" == c || \"FROM_START\" == c ? \", at1\" : \"\") + (\"FROM_END\" == d || \"FROM_START\" == d ? \", at2\" : \"\") + \") {\", \"  var start = \" + f(\"sequence\", c, \"at1\") + \";\", \"  var end = \" + f(\"sequence\", d, \"at2\") + \" + 1;\", \"  return sequence.slice(start, end);\", \"}\"]) + \"(\" + b + (\"FROM_END\" == c || \"FROM_START\" == c ? \", \" + e : \"\") + (\"FROM_END\" == d || \"FROM_START\" == d ? \", \" + a : \"\") + \")\";\n    }\n    return [b, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.lists_sort = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_FUNCTION_CALL) || \"[]\",\n        c = \"1\" === a.getFieldValue(\"DIRECTION\") ? 1 : -1;\n    a = a.getFieldValue(\"TYPE\");\n    var d = Blockly.JavaScript.provideFunction_(\"listsGetSortCompare\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(type, direction) {\", \"  var compareFuncs = {\", '    \"NUMERIC\": function(a, b) {', \"        return Number(a) - Number(b); },\", '    \"TEXT\": function(a, b) {', \"        return a.toString() > b.toString() ? 1 : -1; },\", '    \"IGNORE_CASE\": function(a, b) {', \"        return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1; },\", \"  };\", \"  var compare = compareFuncs[type];\", \"  return function(a, b) { return compare(a, b) * direction; }\", \"}\"]);\n    return [b + \".slice().sort(\" + d + '(\"' + a + '\", ' + c + \"))\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.lists_split = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"INPUT\", Blockly.JavaScript.ORDER_MEMBER),\n        c = Blockly.JavaScript.valueToCode(a, \"DELIM\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    a = a.getFieldValue(\"MODE\");\n    if (\"SPLIT\" == a) b || (b = \"''\"), a = \"split\";else if (\"JOIN\" == a) b || (b = \"[]\"), a = \"join\";else throw Error(\"Unknown mode: \" + a);\n    return [b + \".\" + a + \"(\" + c + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.lists_reverse = function (a) {\n    return [(Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_FUNCTION_CALL) || \"[]\") + \".slice().reverse()\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.logic = {};\n\n  Blockly.JavaScript.controls_if = function (a) {\n    var b = 0,\n        c = \"\";\n    Blockly.JavaScript.STATEMENT_PREFIX && (c += Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX, a));\n\n    do {\n      var d = Blockly.JavaScript.valueToCode(a, \"IF\" + b, Blockly.JavaScript.ORDER_NONE) || \"false\";\n      var e = Blockly.JavaScript.statementToCode(a, \"DO\" + b);\n      Blockly.JavaScript.STATEMENT_SUFFIX && (e = Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX, a), Blockly.JavaScript.INDENT) + e);\n      c += (0 < b ? \" else \" : \"\") + \"if (\" + d + \") {\\n\" + e + \"}\";\n      ++b;\n    } while (a.getInput(\"IF\" + b));\n\n    if (a.getInput(\"ELSE\") || Blockly.JavaScript.STATEMENT_SUFFIX) e = Blockly.JavaScript.statementToCode(a, \"ELSE\"), Blockly.JavaScript.STATEMENT_SUFFIX && (e = Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX, a), Blockly.JavaScript.INDENT) + e), c += \" else {\\n\" + e + \"}\";\n    return c + \"\\n\";\n  };\n\n  Blockly.JavaScript.controls_ifelse = Blockly.JavaScript.controls_if;\n\n  Blockly.JavaScript.logic_compare = function (a) {\n    var b = {\n      EQ: \"==\",\n      NEQ: \"!=\",\n      LT: \"<\",\n      LTE: \"<=\",\n      GT: \">\",\n      GTE: \">=\"\n    }[a.getFieldValue(\"OP\")],\n        c = \"==\" == b || \"!=\" == b ? Blockly.JavaScript.ORDER_EQUALITY : Blockly.JavaScript.ORDER_RELATIONAL,\n        d = Blockly.JavaScript.valueToCode(a, \"A\", c) || \"0\";\n    a = Blockly.JavaScript.valueToCode(a, \"B\", c) || \"0\";\n    return [d + \" \" + b + \" \" + a, c];\n  };\n\n  Blockly.JavaScript.logic_operation = function (a) {\n    var b = \"AND\" == a.getFieldValue(\"OP\") ? \"&&\" : \"||\",\n        c = \"&&\" == b ? Blockly.JavaScript.ORDER_LOGICAL_AND : Blockly.JavaScript.ORDER_LOGICAL_OR,\n        d = Blockly.JavaScript.valueToCode(a, \"A\", c);\n    a = Blockly.JavaScript.valueToCode(a, \"B\", c);\n\n    if (d || a) {\n      var e = \"&&\" == b ? \"true\" : \"false\";\n      d || (d = e);\n      a || (a = e);\n    } else a = d = \"false\";\n\n    return [d + \" \" + b + \" \" + a, c];\n  };\n\n  Blockly.JavaScript.logic_negate = function (a) {\n    var b = Blockly.JavaScript.ORDER_LOGICAL_NOT;\n    return [\"!\" + (Blockly.JavaScript.valueToCode(a, \"BOOL\", b) || \"true\"), b];\n  };\n\n  Blockly.JavaScript.logic_boolean = function (a) {\n    return [\"TRUE\" == a.getFieldValue(\"BOOL\") ? \"true\" : \"false\", Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.logic_null = function (a) {\n    return [\"null\", Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.logic_ternary = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"IF\", Blockly.JavaScript.ORDER_CONDITIONAL) || \"false\",\n        c = Blockly.JavaScript.valueToCode(a, \"THEN\", Blockly.JavaScript.ORDER_CONDITIONAL) || \"null\";\n    a = Blockly.JavaScript.valueToCode(a, \"ELSE\", Blockly.JavaScript.ORDER_CONDITIONAL) || \"null\";\n    return [b + \" ? \" + c + \" : \" + a, Blockly.JavaScript.ORDER_CONDITIONAL];\n  };\n\n  Blockly.JavaScript.loops = {};\n\n  Blockly.JavaScript.controls_repeat_ext = function (a) {\n    var b = a.getField(\"TIMES\") ? String(Number(a.getFieldValue(\"TIMES\"))) : Blockly.JavaScript.valueToCode(a, \"TIMES\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\",\n        c = Blockly.JavaScript.statementToCode(a, \"DO\");\n    c = Blockly.JavaScript.addLoopTrap(c, a);\n    a = \"\";\n    var d = Blockly.JavaScript.nameDB_.getDistinctName(\"count\", Blockly.VARIABLE_CATEGORY_NAME),\n        e = b;\n    b.match(/^\\w+$/) || Blockly.isNumber(b) || (e = Blockly.JavaScript.nameDB_.getDistinctName(\"repeat_end\", Blockly.VARIABLE_CATEGORY_NAME), a += \"var \" + e + \" = \" + b + \";\\n\");\n    return a + (\"for (var \" + d + \" = 0; \" + d + \" < \" + e + \"; \" + d + \"++) {\\n\" + c + \"}\\n\");\n  };\n\n  Blockly.JavaScript.controls_repeat = Blockly.JavaScript.controls_repeat_ext;\n\n  Blockly.JavaScript.controls_whileUntil = function (a) {\n    var b = \"UNTIL\" == a.getFieldValue(\"MODE\"),\n        c = Blockly.JavaScript.valueToCode(a, \"BOOL\", b ? Blockly.JavaScript.ORDER_LOGICAL_NOT : Blockly.JavaScript.ORDER_NONE) || \"false\",\n        d = Blockly.JavaScript.statementToCode(a, \"DO\");\n    d = Blockly.JavaScript.addLoopTrap(d, a);\n    b && (c = \"!\" + c);\n    return \"while (\" + c + \") {\\n\" + d + \"}\\n\";\n  };\n\n  Blockly.JavaScript.controls_for = function (a) {\n    var b = Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME),\n        c = Blockly.JavaScript.valueToCode(a, \"FROM\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\",\n        d = Blockly.JavaScript.valueToCode(a, \"TO\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\",\n        e = Blockly.JavaScript.valueToCode(a, \"BY\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"1\",\n        f = Blockly.JavaScript.statementToCode(a, \"DO\");\n    f = Blockly.JavaScript.addLoopTrap(f, a);\n\n    if (Blockly.isNumber(c) && Blockly.isNumber(d) && Blockly.isNumber(e)) {\n      var g = Number(c) <= Number(d);\n      a = \"for (\" + b + \" = \" + c + \"; \" + b + (g ? \" <= \" : \" >= \") + d + \"; \" + b;\n      b = Math.abs(Number(e));\n      a = (1 == b ? a + (g ? \"++\" : \"--\") : a + ((g ? \" += \" : \" -= \") + b)) + (\") {\\n\" + f + \"}\\n\");\n    } else a = \"\", g = c, c.match(/^\\w+$/) || Blockly.isNumber(c) || (g = Blockly.JavaScript.nameDB_.getDistinctName(b + \"_start\", Blockly.VARIABLE_CATEGORY_NAME), a += \"var \" + g + \" = \" + c + \";\\n\"), c = d, d.match(/^\\w+$/) || Blockly.isNumber(d) || (c = Blockly.JavaScript.nameDB_.getDistinctName(b + \"_end\", Blockly.VARIABLE_CATEGORY_NAME), a += \"var \" + c + \" = \" + d + \";\\n\"), d = Blockly.JavaScript.nameDB_.getDistinctName(b + \"_inc\", Blockly.VARIABLE_CATEGORY_NAME), a += \"var \" + d + \" = \", a = Blockly.isNumber(e) ? a + (Math.abs(e) + \";\\n\") : a + (\"Math.abs(\" + e + \");\\n\"), a = a + (\"if (\" + g + \" > \" + c + \") {\\n\") + (Blockly.JavaScript.INDENT + d + \" = -\" + d + \";\\n\"), a += \"}\\n\", a += \"for (\" + b + \" = \" + g + \"; \" + d + \" >= 0 ? \" + b + \" <= \" + c + \" : \" + b + \" >= \" + c + \"; \" + b + \" += \" + d + \") {\\n\" + f + \"}\\n\";\n\n    return a;\n  };\n\n  Blockly.JavaScript.controls_forEach = function (a) {\n    var b = Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME),\n        c = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"[]\",\n        d = Blockly.JavaScript.statementToCode(a, \"DO\");\n    d = Blockly.JavaScript.addLoopTrap(d, a);\n    a = \"\";\n    var e = c;\n    c.match(/^\\w+$/) || (e = Blockly.JavaScript.nameDB_.getDistinctName(b + \"_list\", Blockly.VARIABLE_CATEGORY_NAME), a += \"var \" + e + \" = \" + c + \";\\n\");\n    c = Blockly.JavaScript.nameDB_.getDistinctName(b + \"_index\", Blockly.VARIABLE_CATEGORY_NAME);\n    d = Blockly.JavaScript.INDENT + b + \" = \" + e + \"[\" + c + \"];\\n\" + d;\n    return a + (\"for (var \" + c + \" in \" + e + \") {\\n\" + d + \"}\\n\");\n  };\n\n  Blockly.JavaScript.controls_flow_statements = function (a) {\n    var b = \"\";\n    Blockly.JavaScript.STATEMENT_PREFIX && (b += Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX, a));\n    Blockly.JavaScript.STATEMENT_SUFFIX && (b += Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX, a));\n\n    if (Blockly.JavaScript.STATEMENT_PREFIX) {\n      var c = Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(a);\n      c && !c.suppressPrefixSuffix && (b += Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX, c));\n    }\n\n    switch (a.getFieldValue(\"FLOW\")) {\n      case \"BREAK\":\n        return b + \"break;\\n\";\n\n      case \"CONTINUE\":\n        return b + \"continue;\\n\";\n    }\n\n    throw Error(\"Unknown flow statement.\");\n  };\n\n  Blockly.JavaScript.math = {};\n\n  Blockly.JavaScript.math_number = function (a) {\n    a = Number(a.getFieldValue(\"NUM\"));\n    return [a, 0 <= a ? Blockly.JavaScript.ORDER_ATOMIC : Blockly.JavaScript.ORDER_UNARY_NEGATION];\n  };\n\n  Blockly.JavaScript.math_arithmetic = function (a) {\n    var b = {\n      ADD: [\" + \", Blockly.JavaScript.ORDER_ADDITION],\n      MINUS: [\" - \", Blockly.JavaScript.ORDER_SUBTRACTION],\n      MULTIPLY: [\" * \", Blockly.JavaScript.ORDER_MULTIPLICATION],\n      DIVIDE: [\" / \", Blockly.JavaScript.ORDER_DIVISION],\n      POWER: [null, Blockly.JavaScript.ORDER_NONE]\n    }[a.getFieldValue(\"OP\")],\n        c = b[0];\n    b = b[1];\n    var d = Blockly.JavaScript.valueToCode(a, \"A\", b) || \"0\";\n    a = Blockly.JavaScript.valueToCode(a, \"B\", b) || \"0\";\n    return c ? [d + c + a, b] : [\"Math.pow(\" + d + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.math_single = function (a) {\n    var b = a.getFieldValue(\"OP\");\n    if (\"NEG\" == b) return a = Blockly.JavaScript.valueToCode(a, \"NUM\", Blockly.JavaScript.ORDER_UNARY_NEGATION) || \"0\", \"-\" == a[0] && (a = \" \" + a), [\"-\" + a, Blockly.JavaScript.ORDER_UNARY_NEGATION];\n    a = \"SIN\" == b || \"COS\" == b || \"TAN\" == b ? Blockly.JavaScript.valueToCode(a, \"NUM\", Blockly.JavaScript.ORDER_DIVISION) || \"0\" : Blockly.JavaScript.valueToCode(a, \"NUM\", Blockly.JavaScript.ORDER_NONE) || \"0\";\n\n    switch (b) {\n      case \"ABS\":\n        var c = \"Math.abs(\" + a + \")\";\n        break;\n\n      case \"ROOT\":\n        c = \"Math.sqrt(\" + a + \")\";\n        break;\n\n      case \"LN\":\n        c = \"Math.log(\" + a + \")\";\n        break;\n\n      case \"EXP\":\n        c = \"Math.exp(\" + a + \")\";\n        break;\n\n      case \"POW10\":\n        c = \"Math.pow(10,\" + a + \")\";\n        break;\n\n      case \"ROUND\":\n        c = \"Math.round(\" + a + \")\";\n        break;\n\n      case \"ROUNDUP\":\n        c = \"Math.ceil(\" + a + \")\";\n        break;\n\n      case \"ROUNDDOWN\":\n        c = \"Math.floor(\" + a + \")\";\n        break;\n\n      case \"SIN\":\n        c = \"Math.sin(\" + a + \" / 180 * Math.PI)\";\n        break;\n\n      case \"COS\":\n        c = \"Math.cos(\" + a + \" / 180 * Math.PI)\";\n        break;\n\n      case \"TAN\":\n        c = \"Math.tan(\" + a + \" / 180 * Math.PI)\";\n    }\n\n    if (c) return [c, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n\n    switch (b) {\n      case \"LOG10\":\n        c = \"Math.log(\" + a + \") / Math.log(10)\";\n        break;\n\n      case \"ASIN\":\n        c = \"Math.asin(\" + a + \") / Math.PI * 180\";\n        break;\n\n      case \"ACOS\":\n        c = \"Math.acos(\" + a + \") / Math.PI * 180\";\n        break;\n\n      case \"ATAN\":\n        c = \"Math.atan(\" + a + \") / Math.PI * 180\";\n        break;\n\n      default:\n        throw Error(\"Unknown math operator: \" + b);\n    }\n\n    return [c, Blockly.JavaScript.ORDER_DIVISION];\n  };\n\n  Blockly.JavaScript.math_constant = function (a) {\n    return {\n      PI: [\"Math.PI\", Blockly.JavaScript.ORDER_MEMBER],\n      E: [\"Math.E\", Blockly.JavaScript.ORDER_MEMBER],\n      GOLDEN_RATIO: [\"(1 + Math.sqrt(5)) / 2\", Blockly.JavaScript.ORDER_DIVISION],\n      SQRT2: [\"Math.SQRT2\", Blockly.JavaScript.ORDER_MEMBER],\n      SQRT1_2: [\"Math.SQRT1_2\", Blockly.JavaScript.ORDER_MEMBER],\n      INFINITY: [\"Infinity\", Blockly.JavaScript.ORDER_ATOMIC]\n    }[a.getFieldValue(\"CONSTANT\")];\n  };\n\n  Blockly.JavaScript.math_number_property = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"NUMBER_TO_CHECK\", Blockly.JavaScript.ORDER_MODULUS) || \"0\",\n        c = a.getFieldValue(\"PROPERTY\");\n    if (\"PRIME\" == c) return [Blockly.JavaScript.provideFunction_(\"mathIsPrime\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(n) {\", \"  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\", \"  if (n == 2 || n == 3) {\", \"    return true;\", \"  }\", \"  // False if n is NaN, negative, is 1, or not whole.\", \"  // And false if n is divisible by 2 or 3.\", \"  if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\", \"    return false;\", \"  }\", \"  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\", \"  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\", \"    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\", \"      return false;\", \"    }\", \"  }\", \"  return true;\", \"}\"]) + \"(\" + b + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n\n    switch (c) {\n      case \"EVEN\":\n        var d = b + \" % 2 == 0\";\n        break;\n\n      case \"ODD\":\n        d = b + \" % 2 == 1\";\n        break;\n\n      case \"WHOLE\":\n        d = b + \" % 1 == 0\";\n        break;\n\n      case \"POSITIVE\":\n        d = b + \" > 0\";\n        break;\n\n      case \"NEGATIVE\":\n        d = b + \" < 0\";\n        break;\n\n      case \"DIVISIBLE_BY\":\n        a = Blockly.JavaScript.valueToCode(a, \"DIVISOR\", Blockly.JavaScript.ORDER_MODULUS) || \"0\", d = b + \" % \" + a + \" == 0\";\n    }\n\n    return [d, Blockly.JavaScript.ORDER_EQUALITY];\n  };\n\n  Blockly.JavaScript.math_change = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"DELTA\", Blockly.JavaScript.ORDER_ADDITION) || \"0\";\n    a = Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME);\n    return a + \" = (typeof \" + a + \" == 'number' ? \" + a + \" : 0) + \" + b + \";\\n\";\n  };\n\n  Blockly.JavaScript.math_round = Blockly.JavaScript.math_single;\n  Blockly.JavaScript.math_trig = Blockly.JavaScript.math_single;\n\n  Blockly.JavaScript.math_on_list = function (a) {\n    var b = a.getFieldValue(\"OP\");\n\n    switch (b) {\n      case \"SUM\":\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_MEMBER) || \"[]\";\n        a += \".reduce(function(x, y) {return x + y;})\";\n        break;\n\n      case \"MIN\":\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = \"Math.min.apply(null, \" + a + \")\";\n        break;\n\n      case \"MAX\":\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = \"Math.max.apply(null, \" + a + \")\";\n        break;\n\n      case \"AVERAGE\":\n        b = Blockly.JavaScript.provideFunction_(\"mathMean\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(myList) {\", \"  return myList.reduce(function(x, y) {return x + y;}) / myList.length;\", \"}\"]);\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = b + \"(\" + a + \")\";\n        break;\n\n      case \"MEDIAN\":\n        b = Blockly.JavaScript.provideFunction_(\"mathMedian\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(myList) {\", \"  var localList = myList.filter(function (x) {return typeof x == 'number';});\", \"  if (!localList.length) return null;\", \"  localList.sort(function(a, b) {return b - a;});\", \"  if (localList.length % 2 == 0) {\", \"    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\", \"  } else {\", \"    return localList[(localList.length - 1) / 2];\", \"  }\", \"}\"]);\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = b + \"(\" + a + \")\";\n        break;\n\n      case \"MODE\":\n        b = Blockly.JavaScript.provideFunction_(\"mathModes\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(values) {\", \"  var modes = [];\", \"  var counts = [];\", \"  var maxCount = 0;\", \"  for (var i = 0; i < values.length; i++) {\", \"    var value = values[i];\", \"    var found = false;\", \"    var thisCount;\", \"    for (var j = 0; j < counts.length; j++) {\", \"      if (counts[j][0] === value) {\", \"        thisCount = ++counts[j][1];\", \"        found = true;\", \"        break;\", \"      }\", \"    }\", \"    if (!found) {\", \"      counts.push([value, 1]);\", \"      thisCount = 1;\", \"    }\", \"    maxCount = Math.max(thisCount, maxCount);\", \"  }\", \"  for (var j = 0; j < counts.length; j++) {\", \"    if (counts[j][1] == maxCount) {\", \"        modes.push(counts[j][0]);\", \"    }\", \"  }\", \"  return modes;\", \"}\"]);\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = b + \"(\" + a + \")\";\n        break;\n\n      case \"STD_DEV\":\n        b = Blockly.JavaScript.provideFunction_(\"mathStandardDeviation\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(numbers) {\", \"  var n = numbers.length;\", \"  if (!n) return null;\", \"  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\", \"  var variance = 0;\", \"  for (var j = 0; j < n; j++) {\", \"    variance += Math.pow(numbers[j] - mean, 2);\", \"  }\", \"  variance = variance / n;\", \"  return Math.sqrt(variance);\", \"}\"]);\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = b + \"(\" + a + \")\";\n        break;\n\n      case \"RANDOM\":\n        b = Blockly.JavaScript.provideFunction_(\"mathRandomList\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(list) {\", \"  var x = Math.floor(Math.random() * list.length);\", \"  return list[x];\", \"}\"]);\n        a = Blockly.JavaScript.valueToCode(a, \"LIST\", Blockly.JavaScript.ORDER_NONE) || \"[]\";\n        a = b + \"(\" + a + \")\";\n        break;\n\n      default:\n        throw Error(\"Unknown operator: \" + b);\n    }\n\n    return [a, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.math_modulo = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"DIVIDEND\", Blockly.JavaScript.ORDER_MODULUS) || \"0\";\n    a = Blockly.JavaScript.valueToCode(a, \"DIVISOR\", Blockly.JavaScript.ORDER_MODULUS) || \"0\";\n    return [b + \" % \" + a, Blockly.JavaScript.ORDER_MODULUS];\n  };\n\n  Blockly.JavaScript.math_constrain = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_NONE) || \"0\",\n        c = Blockly.JavaScript.valueToCode(a, \"LOW\", Blockly.JavaScript.ORDER_NONE) || \"0\";\n    a = Blockly.JavaScript.valueToCode(a, \"HIGH\", Blockly.JavaScript.ORDER_NONE) || \"Infinity\";\n    return [\"Math.min(Math.max(\" + b + \", \" + c + \"), \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.math_random_int = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"FROM\", Blockly.JavaScript.ORDER_NONE) || \"0\";\n    a = Blockly.JavaScript.valueToCode(a, \"TO\", Blockly.JavaScript.ORDER_NONE) || \"0\";\n    return [Blockly.JavaScript.provideFunction_(\"mathRandomInt\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(a, b) {\", \"  if (a > b) {\", \"    // Swap a and b to ensure a is smaller.\", \"    var c = a;\", \"    a = b;\", \"    b = c;\", \"  }\", \"  return Math.floor(Math.random() * (b - a + 1) + a);\", \"}\"]) + \"(\" + b + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.math_random_float = function (a) {\n    return [\"Math.random()\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.math_atan2 = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"X\", Blockly.JavaScript.ORDER_NONE) || \"0\";\n    return [\"Math.atan2(\" + (Blockly.JavaScript.valueToCode(a, \"Y\", Blockly.JavaScript.ORDER_NONE) || \"0\") + \", \" + b + \") / Math.PI * 180\", Blockly.JavaScript.ORDER_DIVISION];\n  };\n\n  Blockly.JavaScript.procedures = {};\n\n  Blockly.JavaScript.procedures_defreturn = function (a) {\n    var b = Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"NAME\"), Blockly.PROCEDURE_CATEGORY_NAME),\n        c = \"\";\n    Blockly.JavaScript.STATEMENT_PREFIX && (c += Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX, a));\n    Blockly.JavaScript.STATEMENT_SUFFIX && (c += Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX, a));\n    c && (c = Blockly.JavaScript.prefixLines(c, Blockly.JavaScript.INDENT));\n    var d = \"\";\n    Blockly.JavaScript.INFINITE_LOOP_TRAP && (d = Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.INFINITE_LOOP_TRAP, a), Blockly.JavaScript.INDENT));\n    var e = Blockly.JavaScript.statementToCode(a, \"STACK\"),\n        f = Blockly.JavaScript.valueToCode(a, \"RETURN\", Blockly.JavaScript.ORDER_NONE) || \"\",\n        g = \"\";\n    e && f && (g = c);\n    f && (f = Blockly.JavaScript.INDENT + \"return \" + f + \";\\n\");\n\n    for (var h = [], l = a.getVars(), k = 0; k < l.length; k++) h[k] = Blockly.JavaScript.nameDB_.getName(l[k], Blockly.VARIABLE_CATEGORY_NAME);\n\n    c = \"function \" + b + \"(\" + h.join(\", \") + \") {\\n\" + c + d + e + g + f + \"}\";\n    c = Blockly.JavaScript.scrub_(a, c);\n    Blockly.JavaScript.definitions_[\"%\" + b] = c;\n    return null;\n  };\n\n  Blockly.JavaScript.procedures_defnoreturn = Blockly.JavaScript.procedures_defreturn;\n\n  Blockly.JavaScript.procedures_callreturn = function (a) {\n    for (var b = Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"NAME\"), Blockly.PROCEDURE_CATEGORY_NAME), c = [], d = a.getVars(), e = 0; e < d.length; e++) c[e] = Blockly.JavaScript.valueToCode(a, \"ARG\" + e, Blockly.JavaScript.ORDER_NONE) || \"null\";\n\n    return [b + \"(\" + c.join(\", \") + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.procedures_callnoreturn = function (a) {\n    return Blockly.JavaScript.procedures_callreturn(a)[0] + \";\\n\";\n  };\n\n  Blockly.JavaScript.procedures_ifreturn = function (a) {\n    var b = \"if (\" + (Blockly.JavaScript.valueToCode(a, \"CONDITION\", Blockly.JavaScript.ORDER_NONE) || \"false\") + \") {\\n\";\n    Blockly.JavaScript.STATEMENT_SUFFIX && (b += Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX, a), Blockly.JavaScript.INDENT));\n    a.hasReturnValue_ ? (a = Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_NONE) || \"null\", b += Blockly.JavaScript.INDENT + \"return \" + a + \";\\n\") : b += Blockly.JavaScript.INDENT + \"return;\\n\";\n    return b + \"}\\n\";\n  };\n\n  Blockly.JavaScript.texts = {};\n\n  Blockly.JavaScript.text = function (a) {\n    return [Blockly.JavaScript.quote_(a.getFieldValue(\"TEXT\")), Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.text_multiline = function (a) {\n    a = Blockly.JavaScript.multiline_quote_(a.getFieldValue(\"TEXT\"));\n    var b = -1 != a.indexOf(\"+\") ? Blockly.JavaScript.ORDER_ADDITION : Blockly.JavaScript.ORDER_ATOMIC;\n    return [a, b];\n  };\n\n  Blockly.JavaScript.text.forceString_ = function (a) {\n    return Blockly.JavaScript.text.forceString_.strRegExp.test(a) ? [a, Blockly.JavaScript.ORDER_ATOMIC] : [\"String(\" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text.forceString_.strRegExp = /^\\s*'([^']|\\\\')*'\\s*$/;\n\n  Blockly.JavaScript.text_join = function (a) {\n    switch (a.itemCount_) {\n      case 0:\n        return [\"''\", Blockly.JavaScript.ORDER_ATOMIC];\n\n      case 1:\n        return a = Blockly.JavaScript.valueToCode(a, \"ADD0\", Blockly.JavaScript.ORDER_NONE) || \"''\", Blockly.JavaScript.text.forceString_(a);\n\n      case 2:\n        var b = Blockly.JavaScript.valueToCode(a, \"ADD0\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n        a = Blockly.JavaScript.valueToCode(a, \"ADD1\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n        a = Blockly.JavaScript.text.forceString_(b)[0] + \" + \" + Blockly.JavaScript.text.forceString_(a)[0];\n        return [a, Blockly.JavaScript.ORDER_ADDITION];\n\n      default:\n        b = Array(a.itemCount_);\n\n        for (var c = 0; c < a.itemCount_; c++) b[c] = Blockly.JavaScript.valueToCode(a, \"ADD\" + c, Blockly.JavaScript.ORDER_NONE) || \"''\";\n\n        a = \"[\" + b.join(\",\") + \"].join('')\";\n        return [a, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    }\n  };\n\n  Blockly.JavaScript.text_append = function (a) {\n    var b = Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME);\n    a = Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    return b + \" += \" + Blockly.JavaScript.text.forceString_(a)[0] + \";\\n\";\n  };\n\n  Blockly.JavaScript.text_length = function (a) {\n    return [(Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_MEMBER) || \"''\") + \".length\", Blockly.JavaScript.ORDER_MEMBER];\n  };\n\n  Blockly.JavaScript.text_isEmpty = function (a) {\n    return [\"!\" + (Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_MEMBER) || \"''\") + \".length\", Blockly.JavaScript.ORDER_LOGICAL_NOT];\n  };\n\n  Blockly.JavaScript.text_indexOf = function (a) {\n    var b = \"FIRST\" == a.getFieldValue(\"END\") ? \"indexOf\" : \"lastIndexOf\",\n        c = Blockly.JavaScript.valueToCode(a, \"FIND\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    b = (Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_MEMBER) || \"''\") + \".\" + b + \"(\" + c + \")\";\n    return a.workspace.options.oneBasedIndex ? [b + \" + 1\", Blockly.JavaScript.ORDER_ADDITION] : [b, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_charAt = function (a) {\n    var b = a.getFieldValue(\"WHERE\") || \"FROM_START\",\n        c = Blockly.JavaScript.valueToCode(a, \"VALUE\", \"RANDOM\" == b ? Blockly.JavaScript.ORDER_NONE : Blockly.JavaScript.ORDER_MEMBER) || \"''\";\n\n    switch (b) {\n      case \"FIRST\":\n        return [c + \".charAt(0)\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n\n      case \"LAST\":\n        return [c + \".slice(-1)\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n\n      case \"FROM_START\":\n        return a = Blockly.JavaScript.getAdjusted(a, \"AT\"), [c + \".charAt(\" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n\n      case \"FROM_END\":\n        return a = Blockly.JavaScript.getAdjusted(a, \"AT\", 1, !0), [c + \".slice(\" + a + \").charAt(0)\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n\n      case \"RANDOM\":\n        return [Blockly.JavaScript.provideFunction_(\"textRandomLetter\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(text) {\", \"  var x = Math.floor(Math.random() * text.length);\", \"  return text[x];\", \"}\"]) + \"(\" + c + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    }\n\n    throw Error(\"Unhandled option (text_charAt).\");\n  };\n\n  Blockly.JavaScript.text.getIndex_ = function (a, b, c) {\n    return \"FIRST\" == b ? \"0\" : \"FROM_END\" == b ? a + \".length - 1 - \" + c : \"LAST\" == b ? a + \".length - 1\" : c;\n  };\n\n  Blockly.JavaScript.text_getSubstring = function (a) {\n    var b = a.getFieldValue(\"WHERE1\"),\n        c = a.getFieldValue(\"WHERE2\"),\n        d = \"FROM_END\" != b && \"LAST\" != b && \"FROM_END\" != c && \"LAST\" != c,\n        e = Blockly.JavaScript.valueToCode(a, \"STRING\", d ? Blockly.JavaScript.ORDER_MEMBER : Blockly.JavaScript.ORDER_NONE) || \"''\";\n    if (\"FIRST\" == b && \"LAST\" == c) return [e, Blockly.JavaScript.ORDER_NONE];\n\n    if (e.match(/^'?\\w+'?$/) || d) {\n      switch (b) {\n        case \"FROM_START\":\n          d = Blockly.JavaScript.getAdjusted(a, \"AT1\");\n          break;\n\n        case \"FROM_END\":\n          d = Blockly.JavaScript.getAdjusted(a, \"AT1\", 1, !1, Blockly.JavaScript.ORDER_SUBTRACTION);\n          d = e + \".length - \" + d;\n          break;\n\n        case \"FIRST\":\n          d = \"0\";\n          break;\n\n        default:\n          throw Error(\"Unhandled option (text_getSubstring).\");\n      }\n\n      switch (c) {\n        case \"FROM_START\":\n          a = Blockly.JavaScript.getAdjusted(a, \"AT2\", 1);\n          break;\n\n        case \"FROM_END\":\n          a = Blockly.JavaScript.getAdjusted(a, \"AT2\", 0, !1, Blockly.JavaScript.ORDER_SUBTRACTION);\n          a = e + \".length - \" + a;\n          break;\n\n        case \"LAST\":\n          a = e + \".length\";\n          break;\n\n        default:\n          throw Error(\"Unhandled option (text_getSubstring).\");\n      }\n\n      b = e + \".slice(\" + d + \", \" + a + \")\";\n    } else {\n      d = Blockly.JavaScript.getAdjusted(a, \"AT1\");\n      a = Blockly.JavaScript.getAdjusted(a, \"AT2\");\n      var f = Blockly.JavaScript.text.getIndex_,\n          g = {\n        FIRST: \"First\",\n        LAST: \"Last\",\n        FROM_START: \"FromStart\",\n        FROM_END: \"FromEnd\"\n      };\n      b = Blockly.JavaScript.provideFunction_(\"subsequence\" + g[b] + g[c], [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(sequence\" + (\"FROM_END\" == b || \"FROM_START\" == b ? \", at1\" : \"\") + (\"FROM_END\" == c || \"FROM_START\" == c ? \", at2\" : \"\") + \") {\", \"  var start = \" + f(\"sequence\", b, \"at1\") + \";\", \"  var end = \" + f(\"sequence\", c, \"at2\") + \" + 1;\", \"  return sequence.slice(start, end);\", \"}\"]) + \"(\" + e + (\"FROM_END\" == b || \"FROM_START\" == b ? \", \" + d : \"\") + (\"FROM_END\" == c || \"FROM_START\" == c ? \", \" + a : \"\") + \")\";\n    }\n\n    return [b, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_changeCase = function (a) {\n    var b = {\n      UPPERCASE: \".toUpperCase()\",\n      LOWERCASE: \".toLowerCase()\",\n      TITLECASE: null\n    }[a.getFieldValue(\"CASE\")];\n    a = Blockly.JavaScript.valueToCode(a, \"TEXT\", b ? Blockly.JavaScript.ORDER_MEMBER : Blockly.JavaScript.ORDER_NONE) || \"''\";\n    return [b ? a + b : Blockly.JavaScript.provideFunction_(\"textToTitleCase\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(str) {\", \"  return str.replace(/\\\\S+/g,\", \"      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\", \"}\"]) + \"(\" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_trim = function (a) {\n    var b = {\n      LEFT: \".replace(/^[\\\\s\\\\xa0]+/, '')\",\n      RIGHT: \".replace(/[\\\\s\\\\xa0]+$/, '')\",\n      BOTH: \".trim()\"\n    }[a.getFieldValue(\"MODE\")];\n    return [(Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_MEMBER) || \"''\") + b, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_print = function (a) {\n    return \"window.alert(\" + (Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_NONE) || \"''\") + \");\\n\";\n  };\n\n  Blockly.JavaScript.text_prompt_ext = function (a) {\n    var b = \"window.prompt(\" + (a.getField(\"TEXT\") ? Blockly.JavaScript.quote_(a.getFieldValue(\"TEXT\")) : Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_NONE) || \"''\") + \")\";\n    \"NUMBER\" == a.getFieldValue(\"TYPE\") && (b = \"Number(\" + b + \")\");\n    return [b, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_prompt = Blockly.JavaScript.text_prompt_ext;\n\n  Blockly.JavaScript.text_count = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    a = Blockly.JavaScript.valueToCode(a, \"SUB\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    return [Blockly.JavaScript.provideFunction_(\"textCount\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(haystack, needle) {\", \"  if (needle.length === 0) {\", \"    return haystack.length + 1;\", \"  } else {\", \"    return haystack.split(needle).length - 1;\", \"  }\", \"}\"]) + \"(\" + b + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_replace = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_NONE) || \"''\",\n        c = Blockly.JavaScript.valueToCode(a, \"FROM\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    a = Blockly.JavaScript.valueToCode(a, \"TO\", Blockly.JavaScript.ORDER_NONE) || \"''\";\n    return [Blockly.JavaScript.provideFunction_(\"textReplace\", [\"function \" + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + \"(haystack, needle, replacement) {\", '  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")', '                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");', \"  return haystack.replace(new RegExp(needle, 'g'), replacement);\", \"}\"]) + \"(\" + b + \", \" + c + \", \" + a + \")\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.text_reverse = function (a) {\n    return [(Blockly.JavaScript.valueToCode(a, \"TEXT\", Blockly.JavaScript.ORDER_MEMBER) || \"''\") + \".split('').reverse().join('')\", Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.JavaScript.variables = {};\n\n  Blockly.JavaScript.variables_get = function (a) {\n    return [Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME), Blockly.JavaScript.ORDER_ATOMIC];\n  };\n\n  Blockly.JavaScript.variables_set = function (a) {\n    var b = Blockly.JavaScript.valueToCode(a, \"VALUE\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\";\n    return Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME) + \" = \" + b + \";\\n\";\n  };\n\n  Blockly.JavaScript.variablesDynamic = {};\n  Blockly.JavaScript.variables_get_dynamic = Blockly.JavaScript.variables_get;\n  Blockly.JavaScript.variables_set_dynamic = Blockly.JavaScript.variables_set;\n  return Blockly.JavaScript;\n});","map":{"version":3,"sources":["generators/javascript.js","generators/javascript/colour.js","generators/javascript/lists.js","generators/javascript/logic.js","generators/javascript/loops.js","generators/javascript/math.js","generators/javascript/procedures.js","generators/javascript/text.js","generators/javascript/variables.js","generators/javascript/variables_dynamic.js"],"names":["Blockly","JavaScript","Generator","Object","getOwnPropertyNames","utils","Blockly.JavaScript.init","getPrototypeOf","init","Names","nameDB_","workspace","getVariableMap","defvars","devVarList","Variables","i","length","push","variables","VARIABLE_CATEGORY_NAME","join","Blockly.JavaScript.finish","definitions","object","code","finish","Blockly.JavaScript.scrubNakedValue","line","Blockly.JavaScript.quote_","string","replace","Blockly.JavaScript.multiline_quote_","split","Blockly.JavaScript.scrub_","commentCode","block","outputConnection","comment","getCommentText","inputList","inputTypes","childBlock","connection","nextBlock","nextConnection","nextCode","opt_thisOnly","Blockly.JavaScript.getAdjusted","delta","opt_delta","order","opt_order","ORDER_NONE","options","defaultAtIndex","at","opt_negate","isNumber","Number","innerOrder","Math","floor","getFieldValue","red","green","blue","functionName","c1","c2","ratio","elements","Array","itemCount_","element","repeatCount","operator","item","mode","where","listOrder","ORDER_MEMBER","list","Error","value","cacheList","match","listVar","xVar","lists","Blockly.JavaScript.lists.getIndex_","listName","where1","where2","at1","at2","getIndex_","wherePascalCase","direction","type","getCompareFunctionName","input","delimiter","n","branchCode","getInput","STATEMENT_SUFFIX","OPERATORS","argument0","argument1","defaultArgument","ORDER_LOGICAL_NOT","value_if","value_then","value_else","getField","repeats","String","branch","loopVar","endVar","until","variable0","increment","up","step","abs","startVar","incVar","INDENT","indexVar","xfix","loop","Constants","Loops","CONTROL_FLOW_IN_LOOP_CHECK_MIXIN","suppressPrefixSuffix","tuple","arg","CONSTANTS","number_to_check","dropdown_property","divisor","varName","func","argument2","funcName","PROCEDURE_CATEGORY_NAME","xfix1","loopTrap","returnValue","xfix2","args","getVars","hasReturnValue_","indexOf","ORDER_ATOMIC","text","Blockly.JavaScript.text.forceString_","forceString_","strRegExp","codeAndOrder","element0","element1","substring","textOrder","Blockly.JavaScript.text.getIndex_","stringName","requiresLengthCall","msg","sub","from","to"],"mappings":"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","sourceRoot":"./","sourcesContent":["// Do not edit this file; automatically generated by gulp.\n\n/* eslint-disable */\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) { // AMD\n    define(['./blockly_compressed.js'], factory);\n  } else if (typeof exports === 'object') { // Node.js\n    module.exports = factory(require('./blockly_compressed.js'));\n  } else { // Browser\n    root.Blockly.JavaScript = factory(root.Blockly);\n  }\n}(this, function(Blockly) {\n  'use strict';Blockly.JavaScript=new Blockly.Generator(\"JavaScript\");Blockly.JavaScript.addReservedWords(\"break,case,catch,class,const,continue,debugger,default,delete,do,else,export,extends,finally,for,function,if,import,in,instanceof,new,return,super,switch,this,throw,try,typeof,var,void,while,with,yield,enum,implements,interface,let,package,private,protected,public,static,await,null,true,false,arguments,\"+Object.getOwnPropertyNames(Blockly.utils.global).join(\",\"));\nBlockly.JavaScript.ORDER_ATOMIC=0;Blockly.JavaScript.ORDER_NEW=1.1;Blockly.JavaScript.ORDER_MEMBER=1.2;Blockly.JavaScript.ORDER_FUNCTION_CALL=2;Blockly.JavaScript.ORDER_INCREMENT=3;Blockly.JavaScript.ORDER_DECREMENT=3;Blockly.JavaScript.ORDER_BITWISE_NOT=4.1;Blockly.JavaScript.ORDER_UNARY_PLUS=4.2;Blockly.JavaScript.ORDER_UNARY_NEGATION=4.3;Blockly.JavaScript.ORDER_LOGICAL_NOT=4.4;Blockly.JavaScript.ORDER_TYPEOF=4.5;Blockly.JavaScript.ORDER_VOID=4.6;Blockly.JavaScript.ORDER_DELETE=4.7;\nBlockly.JavaScript.ORDER_AWAIT=4.8;Blockly.JavaScript.ORDER_EXPONENTIATION=5;Blockly.JavaScript.ORDER_MULTIPLICATION=5.1;Blockly.JavaScript.ORDER_DIVISION=5.2;Blockly.JavaScript.ORDER_MODULUS=5.3;Blockly.JavaScript.ORDER_SUBTRACTION=6.1;Blockly.JavaScript.ORDER_ADDITION=6.2;Blockly.JavaScript.ORDER_BITWISE_SHIFT=7;Blockly.JavaScript.ORDER_RELATIONAL=8;Blockly.JavaScript.ORDER_IN=8;Blockly.JavaScript.ORDER_INSTANCEOF=8;Blockly.JavaScript.ORDER_EQUALITY=9;Blockly.JavaScript.ORDER_BITWISE_AND=10;\nBlockly.JavaScript.ORDER_BITWISE_XOR=11;Blockly.JavaScript.ORDER_BITWISE_OR=12;Blockly.JavaScript.ORDER_LOGICAL_AND=13;Blockly.JavaScript.ORDER_LOGICAL_OR=14;Blockly.JavaScript.ORDER_CONDITIONAL=15;Blockly.JavaScript.ORDER_ASSIGNMENT=16;Blockly.JavaScript.ORDER_YIELD=17;Blockly.JavaScript.ORDER_COMMA=18;Blockly.JavaScript.ORDER_NONE=99;\nBlockly.JavaScript.ORDER_OVERRIDES=[[Blockly.JavaScript.ORDER_FUNCTION_CALL,Blockly.JavaScript.ORDER_MEMBER],[Blockly.JavaScript.ORDER_FUNCTION_CALL,Blockly.JavaScript.ORDER_FUNCTION_CALL],[Blockly.JavaScript.ORDER_MEMBER,Blockly.JavaScript.ORDER_MEMBER],[Blockly.JavaScript.ORDER_MEMBER,Blockly.JavaScript.ORDER_FUNCTION_CALL],[Blockly.JavaScript.ORDER_LOGICAL_NOT,Blockly.JavaScript.ORDER_LOGICAL_NOT],[Blockly.JavaScript.ORDER_MULTIPLICATION,Blockly.JavaScript.ORDER_MULTIPLICATION],[Blockly.JavaScript.ORDER_ADDITION,\nBlockly.JavaScript.ORDER_ADDITION],[Blockly.JavaScript.ORDER_LOGICAL_AND,Blockly.JavaScript.ORDER_LOGICAL_AND],[Blockly.JavaScript.ORDER_LOGICAL_OR,Blockly.JavaScript.ORDER_LOGICAL_OR]];Blockly.JavaScript.isInitialized=!1;\nBlockly.JavaScript.init=function(a){Object.getPrototypeOf(this).init.call(this);this.nameDB_?this.nameDB_.reset():this.nameDB_=new Blockly.Names(this.RESERVED_WORDS_);this.nameDB_.setVariableMap(a.getVariableMap());this.nameDB_.populateVariables(a);this.nameDB_.populateProcedures(a);for(var b=[],c=Blockly.Variables.allDeveloperVariables(a),d=0;d<c.length;d++)b.push(this.nameDB_.getName(c[d],Blockly.Names.DEVELOPER_VARIABLE_TYPE));a=Blockly.Variables.allUsedVarModels(a);for(d=0;d<a.length;d++)b.push(this.nameDB_.getName(a[d].getId(),\nBlockly.VARIABLE_CATEGORY_NAME));b.length&&(this.definitions_.variables=\"var \"+b.join(\", \")+\";\");this.isInitialized=!0};Blockly.JavaScript.finish=function(a){var b=Blockly.utils.object.values(this.definitions_);a=Object.getPrototypeOf(this).finish.call(this,a);this.isInitialized=!1;this.nameDB_.reset();return b.join(\"\\n\\n\")+\"\\n\\n\\n\"+a};Blockly.JavaScript.scrubNakedValue=function(a){return a+\";\\n\"};\nBlockly.JavaScript.quote_=function(a){a=a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\n/g,\"\\\\\\n\").replace(/'/g,\"\\\\'\");return\"'\"+a+\"'\"};Blockly.JavaScript.multiline_quote_=function(a){return a.split(/\\n/g).map(this.quote_).join(\" + '\\\\n' +\\n\")};\nBlockly.JavaScript.scrub_=function(a,b,c){var d=\"\";if(!a.outputConnection||!a.outputConnection.targetConnection){var e=a.getCommentText();e&&(e=Blockly.utils.string.wrap(e,this.COMMENT_WRAP-3),d+=this.prefixLines(e+\"\\n\",\"// \"));for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.inputTypes.VALUE&&(e=a.inputList[f].connection.targetBlock())&&(e=this.allNestedComments(e))&&(d+=this.prefixLines(e,\"// \"))}a=a.nextConnection&&a.nextConnection.targetBlock();c=c?\"\":this.blockToCode(a);return d+\nb+c};\nBlockly.JavaScript.getAdjusted=function(a,b,c,d,e){c=c||0;e=e||this.ORDER_NONE;a.workspace.options.oneBasedIndex&&c--;var f=a.workspace.options.oneBasedIndex?\"1\":\"0\";a=0<c?this.valueToCode(a,b,this.ORDER_ADDITION)||f:0>c?this.valueToCode(a,b,this.ORDER_SUBTRACTION)||f:d?this.valueToCode(a,b,this.ORDER_UNARY_NEGATION)||f:this.valueToCode(a,b,e)||f;if(Blockly.isNumber(a))a=Number(a)+c,d&&(a=-a);else{if(0<c){a=a+\" + \"+c;var g=this.ORDER_ADDITION}else 0>c&&(a=a+\" - \"+-c,g=this.ORDER_SUBTRACTION);d&&(a=\nc?\"-(\"+a+\")\":\"-\"+a,g=this.ORDER_UNARY_NEGATION);g=Math.floor(g);e=Math.floor(e);g&&e>=g&&(a=\"(\"+a+\")\")}return a};Blockly.JavaScript.colour={};Blockly.JavaScript.colour_picker=function(a){return[Blockly.JavaScript.quote_(a.getFieldValue(\"COLOUR\")),Blockly.JavaScript.ORDER_ATOMIC]};Blockly.JavaScript.colour_random=function(a){return[Blockly.JavaScript.provideFunction_(\"colourRandom\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"() {\",\"  var num = Math.floor(Math.random() * Math.pow(2, 24));\",\"  return '#' + ('00000' + num.toString(16)).substr(-6);\",\"}\"])+\"()\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.colour_rgb=function(a){var b=Blockly.JavaScript.valueToCode(a,\"RED\",Blockly.JavaScript.ORDER_NONE)||0,c=Blockly.JavaScript.valueToCode(a,\"GREEN\",Blockly.JavaScript.ORDER_NONE)||0;a=Blockly.JavaScript.valueToCode(a,\"BLUE\",Blockly.JavaScript.ORDER_NONE)||0;return[Blockly.JavaScript.provideFunction_(\"colourRgb\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(r, g, b) {\",\"  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\",\"  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\",\n\"  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\",\"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\",\"  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\",\"  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\",\"  return '#' + r + g + b;\",\"}\"])+\"(\"+b+\", \"+c+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.colour_blend=function(a){var b=Blockly.JavaScript.valueToCode(a,\"COLOUR1\",Blockly.JavaScript.ORDER_NONE)||\"'#000000'\",c=Blockly.JavaScript.valueToCode(a,\"COLOUR2\",Blockly.JavaScript.ORDER_NONE)||\"'#000000'\";a=Blockly.JavaScript.valueToCode(a,\"RATIO\",Blockly.JavaScript.ORDER_NONE)||.5;return[Blockly.JavaScript.provideFunction_(\"colourBlend\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(c1, c2, ratio) {\",\"  ratio = Math.max(Math.min(Number(ratio), 1), 0);\",\"  var r1 = parseInt(c1.substring(1, 3), 16);\",\n\"  var g1 = parseInt(c1.substring(3, 5), 16);\",\"  var b1 = parseInt(c1.substring(5, 7), 16);\",\"  var r2 = parseInt(c2.substring(1, 3), 16);\",\"  var g2 = parseInt(c2.substring(3, 5), 16);\",\"  var b2 = parseInt(c2.substring(5, 7), 16);\",\"  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\",\"  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\",\"  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\",\"  r = ('0' + (r || 0).toString(16)).slice(-2);\",\"  g = ('0' + (g || 0).toString(16)).slice(-2);\",\"  b = ('0' + (b || 0).toString(16)).slice(-2);\",\n\"  return '#' + r + g + b;\",\"}\"])+\"(\"+b+\", \"+c+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.lists={};Blockly.JavaScript.lists_create_empty=function(a){return[\"[]\",Blockly.JavaScript.ORDER_ATOMIC]};Blockly.JavaScript.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.JavaScript.valueToCode(a,\"ADD\"+c,Blockly.JavaScript.ORDER_NONE)||\"null\";return[\"[\"+b.join(\", \")+\"]\",Blockly.JavaScript.ORDER_ATOMIC]};\nBlockly.JavaScript.lists_repeat=function(a){var b=Blockly.JavaScript.provideFunction_(\"listsRepeat\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(value, n) {\",\"  var array = [];\",\"  for (var i = 0; i < n; i++) {\",\"    array[i] = value;\",\"  }\",\"  return array;\",\"}\"]),c=Blockly.JavaScript.valueToCode(a,\"ITEM\",Blockly.JavaScript.ORDER_NONE)||\"null\";a=Blockly.JavaScript.valueToCode(a,\"NUM\",Blockly.JavaScript.ORDER_NONE)||\"0\";return[b+\"(\"+c+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.lists_length=function(a){return[(Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.JavaScript.ORDER_MEMBER]};Blockly.JavaScript.lists_isEmpty=function(a){return[\"!\"+(Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\")+\".length\",Blockly.JavaScript.ORDER_LOGICAL_NOT]};\nBlockly.JavaScript.lists_indexOf=function(a){var b=\"FIRST\"==a.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",c=Blockly.JavaScript.valueToCode(a,\"FIND\",Blockly.JavaScript.ORDER_NONE)||\"''\";b=(Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\")+\".\"+b+\"(\"+c+\")\";return a.workspace.options.oneBasedIndex?[b+\" + 1\",Blockly.JavaScript.ORDER_ADDITION]:[b,Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.lists_getIndex=function(a){var b=a.getFieldValue(\"MODE\")||\"GET\",c=a.getFieldValue(\"WHERE\")||\"FROM_START\",d=Blockly.JavaScript.valueToCode(a,\"VALUE\",\"RANDOM\"==c?Blockly.JavaScript.ORDER_NONE:Blockly.JavaScript.ORDER_MEMBER)||\"[]\";switch(c){case \"FIRST\":if(\"GET\"==b)return[d+\"[0]\",Blockly.JavaScript.ORDER_MEMBER];if(\"GET_REMOVE\"==b)return[d+\".shift()\",Blockly.JavaScript.ORDER_MEMBER];if(\"REMOVE\"==b)return d+\".shift();\\n\";break;case \"LAST\":if(\"GET\"==b)return[d+\".slice(-1)[0]\",Blockly.JavaScript.ORDER_MEMBER];\nif(\"GET_REMOVE\"==b)return[d+\".pop()\",Blockly.JavaScript.ORDER_MEMBER];if(\"REMOVE\"==b)return d+\".pop();\\n\";break;case \"FROM_START\":a=Blockly.JavaScript.getAdjusted(a,\"AT\");if(\"GET\"==b)return[d+\"[\"+a+\"]\",Blockly.JavaScript.ORDER_MEMBER];if(\"GET_REMOVE\"==b)return[d+\".splice(\"+a+\", 1)[0]\",Blockly.JavaScript.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\".splice(\"+a+\", 1);\\n\";break;case \"FROM_END\":a=Blockly.JavaScript.getAdjusted(a,\"AT\",1,!0);if(\"GET\"==b)return[d+\".slice(\"+a+\")[0]\",Blockly.JavaScript.ORDER_FUNCTION_CALL];\nif(\"GET_REMOVE\"==b)return[d+\".splice(\"+a+\", 1)[0]\",Blockly.JavaScript.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\".splice(\"+a+\", 1);\";break;case \"RANDOM\":d=Blockly.JavaScript.provideFunction_(\"listsGetRandomItem\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(list, remove) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  if (remove) {\",\"    return list.splice(x, 1)[0];\",\"  } else {\",\"    return list[x];\",\"  }\",\"}\"])+\"(\"+d+\", \"+(\"GET\"!=b)+\")\";if(\"GET\"==b||\"GET_REMOVE\"==b)return[d,\nBlockly.JavaScript.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\";\\n\"}throw Error(\"Unhandled combination (lists_getIndex).\");};\nBlockly.JavaScript.lists_setIndex=function(a){function b(){if(c.match(/^\\w+$/))return\"\";var g=Blockly.JavaScript.nameDB_.getDistinctName(\"tmpList\",Blockly.VARIABLE_CATEGORY_NAME),h=\"var \"+g+\" = \"+c+\";\\n\";c=g;return h}var c=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\",d=a.getFieldValue(\"MODE\")||\"GET\",e=a.getFieldValue(\"WHERE\")||\"FROM_START\",f=Blockly.JavaScript.valueToCode(a,\"TO\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"null\";switch(e){case \"FIRST\":if(\"SET\"==d)return c+\n\"[0] = \"+f+\";\\n\";if(\"INSERT\"==d)return c+\".unshift(\"+f+\");\\n\";break;case \"LAST\":if(\"SET\"==d)return a=b(),a+(c+\"[\"+c+\".length - 1] = \"+f+\";\\n\");if(\"INSERT\"==d)return c+\".push(\"+f+\");\\n\";break;case \"FROM_START\":e=Blockly.JavaScript.getAdjusted(a,\"AT\");if(\"SET\"==d)return c+\"[\"+e+\"] = \"+f+\";\\n\";if(\"INSERT\"==d)return c+\".splice(\"+e+\", 0, \"+f+\");\\n\";break;case \"FROM_END\":e=Blockly.JavaScript.getAdjusted(a,\"AT\",1,!1,Blockly.JavaScript.ORDER_SUBTRACTION);a=b();if(\"SET\"==d)return a+(c+\"[\"+c+\".length - \"+e+\n\"] = \"+f+\";\\n\");if(\"INSERT\"==d)return a+(c+\".splice(\"+c+\".length - \"+e+\", 0, \"+f+\");\\n\");break;case \"RANDOM\":a=b();e=Blockly.JavaScript.nameDB_.getDistinctName(\"tmpX\",Blockly.VARIABLE_CATEGORY_NAME);a+=\"var \"+e+\" = Math.floor(Math.random() * \"+c+\".length);\\n\";if(\"SET\"==d)return a+(c+\"[\"+e+\"] = \"+f+\";\\n\");if(\"INSERT\"==d)return a+(c+\".splice(\"+e+\", 0, \"+f+\");\\n\")}throw Error(\"Unhandled combination (lists_setIndex).\");};\nBlockly.JavaScript.lists.getIndex_=function(a,b,c){return\"FIRST\"==b?\"0\":\"FROM_END\"==b?a+\".length - 1 - \"+c:\"LAST\"==b?a+\".length - 1\":c};\nBlockly.JavaScript.lists_getSublist=function(a){var b=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\",c=a.getFieldValue(\"WHERE1\"),d=a.getFieldValue(\"WHERE2\");if(\"FIRST\"==c&&\"LAST\"==d)b+=\".slice(0)\";else if(b.match(/^\\w+$/)||\"FROM_END\"!=c&&\"FROM_START\"==d){switch(c){case \"FROM_START\":var e=Blockly.JavaScript.getAdjusted(a,\"AT1\");break;case \"FROM_END\":e=Blockly.JavaScript.getAdjusted(a,\"AT1\",1,!1,Blockly.JavaScript.ORDER_SUBTRACTION);e=b+\".length - \"+e;break;case \"FIRST\":e=\n\"0\";break;default:throw Error(\"Unhandled option (lists_getSublist).\");}switch(d){case \"FROM_START\":a=Blockly.JavaScript.getAdjusted(a,\"AT2\",1);break;case \"FROM_END\":a=Blockly.JavaScript.getAdjusted(a,\"AT2\",0,!1,Blockly.JavaScript.ORDER_SUBTRACTION);a=b+\".length - \"+a;break;case \"LAST\":a=b+\".length\";break;default:throw Error(\"Unhandled option (lists_getSublist).\");}b=b+\".slice(\"+e+\", \"+a+\")\"}else{e=Blockly.JavaScript.getAdjusted(a,\"AT1\");a=Blockly.JavaScript.getAdjusted(a,\"AT2\");var f=Blockly.JavaScript.lists.getIndex_,\ng={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};b=Blockly.JavaScript.provideFunction_(\"subsequence\"+g[c]+g[d],[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==c||\"FROM_START\"==c?\", at1\":\"\")+(\"FROM_END\"==d||\"FROM_START\"==d?\", at2\":\"\")+\") {\",\"  var start = \"+f(\"sequence\",c,\"at1\")+\";\",\"  var end = \"+f(\"sequence\",d,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\"}\"])+\"(\"+b+(\"FROM_END\"==c||\"FROM_START\"==c?\", \"+e:\"\")+(\"FROM_END\"==d||\"FROM_START\"==\nd?\", \"+a:\"\")+\")\"}return[b,Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.lists_sort=function(a){var b=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_FUNCTION_CALL)||\"[]\",c=\"1\"===a.getFieldValue(\"DIRECTION\")?1:-1;a=a.getFieldValue(\"TYPE\");var d=Blockly.JavaScript.provideFunction_(\"listsGetSortCompare\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(type, direction) {\",\"  var compareFuncs = {\",'    \"NUMERIC\": function(a, b) {',\"        return Number(a) - Number(b); },\",'    \"TEXT\": function(a, b) {',\"        return a.toString() > b.toString() ? 1 : -1; },\",\n'    \"IGNORE_CASE\": function(a, b) {',\"        return a.toString().toLowerCase() > b.toString().toLowerCase() ? 1 : -1; },\",\"  };\",\"  var compare = compareFuncs[type];\",\"  return function(a, b) { return compare(a, b) * direction; }\",\"}\"]);return[b+\".slice().sort(\"+d+'(\"'+a+'\", '+c+\"))\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.lists_split=function(a){var b=Blockly.JavaScript.valueToCode(a,\"INPUT\",Blockly.JavaScript.ORDER_MEMBER),c=Blockly.JavaScript.valueToCode(a,\"DELIM\",Blockly.JavaScript.ORDER_NONE)||\"''\";a=a.getFieldValue(\"MODE\");if(\"SPLIT\"==a)b||(b=\"''\"),a=\"split\";else if(\"JOIN\"==a)b||(b=\"[]\"),a=\"join\";else throw Error(\"Unknown mode: \"+a);return[b+\".\"+a+\"(\"+c+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.lists_reverse=function(a){return[(Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_FUNCTION_CALL)||\"[]\")+\".slice().reverse()\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.logic={};\nBlockly.JavaScript.controls_if=function(a){var b=0,c=\"\";Blockly.JavaScript.STATEMENT_PREFIX&&(c+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX,a));do{var d=Blockly.JavaScript.valueToCode(a,\"IF\"+b,Blockly.JavaScript.ORDER_NONE)||\"false\";var e=Blockly.JavaScript.statementToCode(a,\"DO\"+b);Blockly.JavaScript.STATEMENT_SUFFIX&&(e=Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,a),Blockly.JavaScript.INDENT)+e);c+=(0<b?\" else \":\"\")+\"if (\"+\nd+\") {\\n\"+e+\"}\";++b}while(a.getInput(\"IF\"+b));if(a.getInput(\"ELSE\")||Blockly.JavaScript.STATEMENT_SUFFIX)e=Blockly.JavaScript.statementToCode(a,\"ELSE\"),Blockly.JavaScript.STATEMENT_SUFFIX&&(e=Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,a),Blockly.JavaScript.INDENT)+e),c+=\" else {\\n\"+e+\"}\";return c+\"\\n\"};Blockly.JavaScript.controls_ifelse=Blockly.JavaScript.controls_if;\nBlockly.JavaScript.logic_compare=function(a){var b={EQ:\"==\",NEQ:\"!=\",LT:\"<\",LTE:\"<=\",GT:\">\",GTE:\">=\"}[a.getFieldValue(\"OP\")],c=\"==\"==b||\"!=\"==b?Blockly.JavaScript.ORDER_EQUALITY:Blockly.JavaScript.ORDER_RELATIONAL,d=Blockly.JavaScript.valueToCode(a,\"A\",c)||\"0\";a=Blockly.JavaScript.valueToCode(a,\"B\",c)||\"0\";return[d+\" \"+b+\" \"+a,c]};\nBlockly.JavaScript.logic_operation=function(a){var b=\"AND\"==a.getFieldValue(\"OP\")?\"&&\":\"||\",c=\"&&\"==b?Blockly.JavaScript.ORDER_LOGICAL_AND:Blockly.JavaScript.ORDER_LOGICAL_OR,d=Blockly.JavaScript.valueToCode(a,\"A\",c);a=Blockly.JavaScript.valueToCode(a,\"B\",c);if(d||a){var e=\"&&\"==b?\"true\":\"false\";d||(d=e);a||(a=e)}else a=d=\"false\";return[d+\" \"+b+\" \"+a,c]};\nBlockly.JavaScript.logic_negate=function(a){var b=Blockly.JavaScript.ORDER_LOGICAL_NOT;return[\"!\"+(Blockly.JavaScript.valueToCode(a,\"BOOL\",b)||\"true\"),b]};Blockly.JavaScript.logic_boolean=function(a){return[\"TRUE\"==a.getFieldValue(\"BOOL\")?\"true\":\"false\",Blockly.JavaScript.ORDER_ATOMIC]};Blockly.JavaScript.logic_null=function(a){return[\"null\",Blockly.JavaScript.ORDER_ATOMIC]};\nBlockly.JavaScript.logic_ternary=function(a){var b=Blockly.JavaScript.valueToCode(a,\"IF\",Blockly.JavaScript.ORDER_CONDITIONAL)||\"false\",c=Blockly.JavaScript.valueToCode(a,\"THEN\",Blockly.JavaScript.ORDER_CONDITIONAL)||\"null\";a=Blockly.JavaScript.valueToCode(a,\"ELSE\",Blockly.JavaScript.ORDER_CONDITIONAL)||\"null\";return[b+\" ? \"+c+\" : \"+a,Blockly.JavaScript.ORDER_CONDITIONAL]};Blockly.JavaScript.loops={};\nBlockly.JavaScript.controls_repeat_ext=function(a){var b=a.getField(\"TIMES\")?String(Number(a.getFieldValue(\"TIMES\"))):Blockly.JavaScript.valueToCode(a,\"TIMES\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\",c=Blockly.JavaScript.statementToCode(a,\"DO\");c=Blockly.JavaScript.addLoopTrap(c,a);a=\"\";var d=Blockly.JavaScript.nameDB_.getDistinctName(\"count\",Blockly.VARIABLE_CATEGORY_NAME),e=b;b.match(/^\\w+$/)||Blockly.isNumber(b)||(e=Blockly.JavaScript.nameDB_.getDistinctName(\"repeat_end\",Blockly.VARIABLE_CATEGORY_NAME),\na+=\"var \"+e+\" = \"+b+\";\\n\");return a+(\"for (var \"+d+\" = 0; \"+d+\" < \"+e+\"; \"+d+\"++) {\\n\"+c+\"}\\n\")};Blockly.JavaScript.controls_repeat=Blockly.JavaScript.controls_repeat_ext;\nBlockly.JavaScript.controls_whileUntil=function(a){var b=\"UNTIL\"==a.getFieldValue(\"MODE\"),c=Blockly.JavaScript.valueToCode(a,\"BOOL\",b?Blockly.JavaScript.ORDER_LOGICAL_NOT:Blockly.JavaScript.ORDER_NONE)||\"false\",d=Blockly.JavaScript.statementToCode(a,\"DO\");d=Blockly.JavaScript.addLoopTrap(d,a);b&&(c=\"!\"+c);return\"while (\"+c+\") {\\n\"+d+\"}\\n\"};\nBlockly.JavaScript.controls_for=function(a){var b=Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.JavaScript.valueToCode(a,\"FROM\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\",d=Blockly.JavaScript.valueToCode(a,\"TO\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\",e=Blockly.JavaScript.valueToCode(a,\"BY\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"1\",f=Blockly.JavaScript.statementToCode(a,\"DO\");f=Blockly.JavaScript.addLoopTrap(f,a);if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&\nBlockly.isNumber(e)){var g=Number(c)<=Number(d);a=\"for (\"+b+\" = \"+c+\"; \"+b+(g?\" <= \":\" >= \")+d+\"; \"+b;b=Math.abs(Number(e));a=(1==b?a+(g?\"++\":\"--\"):a+((g?\" += \":\" -= \")+b))+(\") {\\n\"+f+\"}\\n\")}else a=\"\",g=c,c.match(/^\\w+$/)||Blockly.isNumber(c)||(g=Blockly.JavaScript.nameDB_.getDistinctName(b+\"_start\",Blockly.VARIABLE_CATEGORY_NAME),a+=\"var \"+g+\" = \"+c+\";\\n\"),c=d,d.match(/^\\w+$/)||Blockly.isNumber(d)||(c=Blockly.JavaScript.nameDB_.getDistinctName(b+\"_end\",Blockly.VARIABLE_CATEGORY_NAME),a+=\"var \"+c+\n\" = \"+d+\";\\n\"),d=Blockly.JavaScript.nameDB_.getDistinctName(b+\"_inc\",Blockly.VARIABLE_CATEGORY_NAME),a+=\"var \"+d+\" = \",a=Blockly.isNumber(e)?a+(Math.abs(e)+\";\\n\"):a+(\"Math.abs(\"+e+\");\\n\"),a=a+(\"if (\"+g+\" > \"+c+\") {\\n\")+(Blockly.JavaScript.INDENT+d+\" = -\"+d+\";\\n\"),a+=\"}\\n\",a+=\"for (\"+b+\" = \"+g+\"; \"+d+\" >= 0 ? \"+b+\" <= \"+c+\" : \"+b+\" >= \"+c+\"; \"+b+\" += \"+d+\") {\\n\"+f+\"}\\n\";return a};\nBlockly.JavaScript.controls_forEach=function(a){var b=Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"[]\",d=Blockly.JavaScript.statementToCode(a,\"DO\");d=Blockly.JavaScript.addLoopTrap(d,a);a=\"\";var e=c;c.match(/^\\w+$/)||(e=Blockly.JavaScript.nameDB_.getDistinctName(b+\"_list\",Blockly.VARIABLE_CATEGORY_NAME),a+=\"var \"+e+\" = \"+c+\";\\n\");c=Blockly.JavaScript.nameDB_.getDistinctName(b+\n\"_index\",Blockly.VARIABLE_CATEGORY_NAME);d=Blockly.JavaScript.INDENT+b+\" = \"+e+\"[\"+c+\"];\\n\"+d;return a+(\"for (var \"+c+\" in \"+e+\") {\\n\"+d+\"}\\n\")};\nBlockly.JavaScript.controls_flow_statements=function(a){var b=\"\";Blockly.JavaScript.STATEMENT_PREFIX&&(b+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX,a));Blockly.JavaScript.STATEMENT_SUFFIX&&(b+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,a));if(Blockly.JavaScript.STATEMENT_PREFIX){var c=Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(a);c&&!c.suppressPrefixSuffix&&(b+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX,\nc))}switch(a.getFieldValue(\"FLOW\")){case \"BREAK\":return b+\"break;\\n\";case \"CONTINUE\":return b+\"continue;\\n\"}throw Error(\"Unknown flow statement.\");};Blockly.JavaScript.math={};Blockly.JavaScript.math_number=function(a){a=Number(a.getFieldValue(\"NUM\"));return[a,0<=a?Blockly.JavaScript.ORDER_ATOMIC:Blockly.JavaScript.ORDER_UNARY_NEGATION]};\nBlockly.JavaScript.math_arithmetic=function(a){var b={ADD:[\" + \",Blockly.JavaScript.ORDER_ADDITION],MINUS:[\" - \",Blockly.JavaScript.ORDER_SUBTRACTION],MULTIPLY:[\" * \",Blockly.JavaScript.ORDER_MULTIPLICATION],DIVIDE:[\" / \",Blockly.JavaScript.ORDER_DIVISION],POWER:[null,Blockly.JavaScript.ORDER_NONE]}[a.getFieldValue(\"OP\")],c=b[0];b=b[1];var d=Blockly.JavaScript.valueToCode(a,\"A\",b)||\"0\";a=Blockly.JavaScript.valueToCode(a,\"B\",b)||\"0\";return c?[d+c+a,b]:[\"Math.pow(\"+d+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.math_single=function(a){var b=a.getFieldValue(\"OP\");if(\"NEG\"==b)return a=Blockly.JavaScript.valueToCode(a,\"NUM\",Blockly.JavaScript.ORDER_UNARY_NEGATION)||\"0\",\"-\"==a[0]&&(a=\" \"+a),[\"-\"+a,Blockly.JavaScript.ORDER_UNARY_NEGATION];a=\"SIN\"==b||\"COS\"==b||\"TAN\"==b?Blockly.JavaScript.valueToCode(a,\"NUM\",Blockly.JavaScript.ORDER_DIVISION)||\"0\":Blockly.JavaScript.valueToCode(a,\"NUM\",Blockly.JavaScript.ORDER_NONE)||\"0\";switch(b){case \"ABS\":var c=\"Math.abs(\"+a+\")\";break;case \"ROOT\":c=\"Math.sqrt(\"+\na+\")\";break;case \"LN\":c=\"Math.log(\"+a+\")\";break;case \"EXP\":c=\"Math.exp(\"+a+\")\";break;case \"POW10\":c=\"Math.pow(10,\"+a+\")\";break;case \"ROUND\":c=\"Math.round(\"+a+\")\";break;case \"ROUNDUP\":c=\"Math.ceil(\"+a+\")\";break;case \"ROUNDDOWN\":c=\"Math.floor(\"+a+\")\";break;case \"SIN\":c=\"Math.sin(\"+a+\" / 180 * Math.PI)\";break;case \"COS\":c=\"Math.cos(\"+a+\" / 180 * Math.PI)\";break;case \"TAN\":c=\"Math.tan(\"+a+\" / 180 * Math.PI)\"}if(c)return[c,Blockly.JavaScript.ORDER_FUNCTION_CALL];switch(b){case \"LOG10\":c=\"Math.log(\"+a+\n\") / Math.log(10)\";break;case \"ASIN\":c=\"Math.asin(\"+a+\") / Math.PI * 180\";break;case \"ACOS\":c=\"Math.acos(\"+a+\") / Math.PI * 180\";break;case \"ATAN\":c=\"Math.atan(\"+a+\") / Math.PI * 180\";break;default:throw Error(\"Unknown math operator: \"+b);}return[c,Blockly.JavaScript.ORDER_DIVISION]};\nBlockly.JavaScript.math_constant=function(a){return{PI:[\"Math.PI\",Blockly.JavaScript.ORDER_MEMBER],E:[\"Math.E\",Blockly.JavaScript.ORDER_MEMBER],GOLDEN_RATIO:[\"(1 + Math.sqrt(5)) / 2\",Blockly.JavaScript.ORDER_DIVISION],SQRT2:[\"Math.SQRT2\",Blockly.JavaScript.ORDER_MEMBER],SQRT1_2:[\"Math.SQRT1_2\",Blockly.JavaScript.ORDER_MEMBER],INFINITY:[\"Infinity\",Blockly.JavaScript.ORDER_ATOMIC]}[a.getFieldValue(\"CONSTANT\")]};\nBlockly.JavaScript.math_number_property=function(a){var b=Blockly.JavaScript.valueToCode(a,\"NUMBER_TO_CHECK\",Blockly.JavaScript.ORDER_MODULUS)||\"0\",c=a.getFieldValue(\"PROPERTY\");if(\"PRIME\"==c)return[Blockly.JavaScript.provideFunction_(\"mathIsPrime\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(n) {\",\"  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\",\"  if (n == 2 || n == 3) {\",\"    return true;\",\"  }\",\"  // False if n is NaN, negative, is 1, or not whole.\",\"  // And false if n is divisible by 2 or 3.\",\n\"  if (isNaN(n) || n <= 1 || n % 1 != 0 || n % 2 == 0 || n % 3 == 0) {\",\"    return false;\",\"  }\",\"  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\",\"  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\",\"    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\",\"      return false;\",\"    }\",\"  }\",\"  return true;\",\"}\"])+\"(\"+b+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL];switch(c){case \"EVEN\":var d=b+\" % 2 == 0\";break;case \"ODD\":d=b+\" % 2 == 1\";break;case \"WHOLE\":d=b+\" % 1 == 0\";break;case \"POSITIVE\":d=\nb+\" > 0\";break;case \"NEGATIVE\":d=b+\" < 0\";break;case \"DIVISIBLE_BY\":a=Blockly.JavaScript.valueToCode(a,\"DIVISOR\",Blockly.JavaScript.ORDER_MODULUS)||\"0\",d=b+\" % \"+a+\" == 0\"}return[d,Blockly.JavaScript.ORDER_EQUALITY]};Blockly.JavaScript.math_change=function(a){var b=Blockly.JavaScript.valueToCode(a,\"DELTA\",Blockly.JavaScript.ORDER_ADDITION)||\"0\";a=Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME);return a+\" = (typeof \"+a+\" == 'number' ? \"+a+\" : 0) + \"+b+\";\\n\"};\nBlockly.JavaScript.math_round=Blockly.JavaScript.math_single;Blockly.JavaScript.math_trig=Blockly.JavaScript.math_single;\nBlockly.JavaScript.math_on_list=function(a){var b=a.getFieldValue(\"OP\");switch(b){case \"SUM\":a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_MEMBER)||\"[]\";a+=\".reduce(function(x, y) {return x + y;})\";break;case \"MIN\":a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=\"Math.min.apply(null, \"+a+\")\";break;case \"MAX\":a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=\"Math.max.apply(null, \"+a+\")\";break;case \"AVERAGE\":b=Blockly.JavaScript.provideFunction_(\"mathMean\",\n[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  return myList.reduce(function(x, y) {return x + y;}) / myList.length;\",\"}\"]);a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=b+\"(\"+a+\")\";break;case \"MEDIAN\":b=Blockly.JavaScript.provideFunction_(\"mathMedian\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(myList) {\",\"  var localList = myList.filter(function (x) {return typeof x == 'number';});\",\"  if (!localList.length) return null;\",\n\"  localList.sort(function(a, b) {return b - a;});\",\"  if (localList.length % 2 == 0) {\",\"    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\",\"  } else {\",\"    return localList[(localList.length - 1) / 2];\",\"  }\",\"}\"]);a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=b+\"(\"+a+\")\";break;case \"MODE\":b=Blockly.JavaScript.provideFunction_(\"mathModes\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(values) {\",\"  var modes = [];\",\n\"  var counts = [];\",\"  var maxCount = 0;\",\"  for (var i = 0; i < values.length; i++) {\",\"    var value = values[i];\",\"    var found = false;\",\"    var thisCount;\",\"    for (var j = 0; j < counts.length; j++) {\",\"      if (counts[j][0] === value) {\",\"        thisCount = ++counts[j][1];\",\"        found = true;\",\"        break;\",\"      }\",\"    }\",\"    if (!found) {\",\"      counts.push([value, 1]);\",\"      thisCount = 1;\",\"    }\",\"    maxCount = Math.max(thisCount, maxCount);\",\"  }\",\"  for (var j = 0; j < counts.length; j++) {\",\n\"    if (counts[j][1] == maxCount) {\",\"        modes.push(counts[j][0]);\",\"    }\",\"  }\",\"  return modes;\",\"}\"]);a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=b+\"(\"+a+\")\";break;case \"STD_DEV\":b=Blockly.JavaScript.provideFunction_(\"mathStandardDeviation\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(numbers) {\",\"  var n = numbers.length;\",\"  if (!n) return null;\",\"  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\",\"  var variance = 0;\",\n\"  for (var j = 0; j < n; j++) {\",\"    variance += Math.pow(numbers[j] - mean, 2);\",\"  }\",\"  variance = variance / n;\",\"  return Math.sqrt(variance);\",\"}\"]);a=Blockly.JavaScript.valueToCode(a,\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=b+\"(\"+a+\")\";break;case \"RANDOM\":b=Blockly.JavaScript.provideFunction_(\"mathRandomList\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(list) {\",\"  var x = Math.floor(Math.random() * list.length);\",\"  return list[x];\",\"}\"]);a=Blockly.JavaScript.valueToCode(a,\n\"LIST\",Blockly.JavaScript.ORDER_NONE)||\"[]\";a=b+\"(\"+a+\")\";break;default:throw Error(\"Unknown operator: \"+b);}return[a,Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.math_modulo=function(a){var b=Blockly.JavaScript.valueToCode(a,\"DIVIDEND\",Blockly.JavaScript.ORDER_MODULUS)||\"0\";a=Blockly.JavaScript.valueToCode(a,\"DIVISOR\",Blockly.JavaScript.ORDER_MODULUS)||\"0\";return[b+\" % \"+a,Blockly.JavaScript.ORDER_MODULUS]};\nBlockly.JavaScript.math_constrain=function(a){var b=Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_NONE)||\"0\",c=Blockly.JavaScript.valueToCode(a,\"LOW\",Blockly.JavaScript.ORDER_NONE)||\"0\";a=Blockly.JavaScript.valueToCode(a,\"HIGH\",Blockly.JavaScript.ORDER_NONE)||\"Infinity\";return[\"Math.min(Math.max(\"+b+\", \"+c+\"), \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.math_random_int=function(a){var b=Blockly.JavaScript.valueToCode(a,\"FROM\",Blockly.JavaScript.ORDER_NONE)||\"0\";a=Blockly.JavaScript.valueToCode(a,\"TO\",Blockly.JavaScript.ORDER_NONE)||\"0\";return[Blockly.JavaScript.provideFunction_(\"mathRandomInt\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(a, b) {\",\"  if (a > b) {\",\"    // Swap a and b to ensure a is smaller.\",\"    var c = a;\",\"    a = b;\",\"    b = c;\",\"  }\",\"  return Math.floor(Math.random() * (b - a + 1) + a);\",\n\"}\"])+\"(\"+b+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.math_random_float=function(a){return[\"Math.random()\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.math_atan2=function(a){var b=Blockly.JavaScript.valueToCode(a,\"X\",Blockly.JavaScript.ORDER_NONE)||\"0\";return[\"Math.atan2(\"+(Blockly.JavaScript.valueToCode(a,\"Y\",Blockly.JavaScript.ORDER_NONE)||\"0\")+\", \"+b+\") / Math.PI * 180\",Blockly.JavaScript.ORDER_DIVISION]};Blockly.JavaScript.procedures={};\nBlockly.JavaScript.procedures_defreturn=function(a){var b=Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"NAME\"),Blockly.PROCEDURE_CATEGORY_NAME),c=\"\";Blockly.JavaScript.STATEMENT_PREFIX&&(c+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_PREFIX,a));Blockly.JavaScript.STATEMENT_SUFFIX&&(c+=Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,a));c&&(c=Blockly.JavaScript.prefixLines(c,Blockly.JavaScript.INDENT));var d=\"\";Blockly.JavaScript.INFINITE_LOOP_TRAP&&(d=Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.INFINITE_LOOP_TRAP,\na),Blockly.JavaScript.INDENT));var e=Blockly.JavaScript.statementToCode(a,\"STACK\"),f=Blockly.JavaScript.valueToCode(a,\"RETURN\",Blockly.JavaScript.ORDER_NONE)||\"\",g=\"\";e&&f&&(g=c);f&&(f=Blockly.JavaScript.INDENT+\"return \"+f+\";\\n\");for(var h=[],l=a.getVars(),k=0;k<l.length;k++)h[k]=Blockly.JavaScript.nameDB_.getName(l[k],Blockly.VARIABLE_CATEGORY_NAME);c=\"function \"+b+\"(\"+h.join(\", \")+\") {\\n\"+c+d+e+g+f+\"}\";c=Blockly.JavaScript.scrub_(a,c);Blockly.JavaScript.definitions_[\"%\"+b]=c;return null};\nBlockly.JavaScript.procedures_defnoreturn=Blockly.JavaScript.procedures_defreturn;Blockly.JavaScript.procedures_callreturn=function(a){for(var b=Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"NAME\"),Blockly.PROCEDURE_CATEGORY_NAME),c=[],d=a.getVars(),e=0;e<d.length;e++)c[e]=Blockly.JavaScript.valueToCode(a,\"ARG\"+e,Blockly.JavaScript.ORDER_NONE)||\"null\";return[b+\"(\"+c.join(\", \")+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.procedures_callnoreturn=function(a){return Blockly.JavaScript.procedures_callreturn(a)[0]+\";\\n\"};\nBlockly.JavaScript.procedures_ifreturn=function(a){var b=\"if (\"+(Blockly.JavaScript.valueToCode(a,\"CONDITION\",Blockly.JavaScript.ORDER_NONE)||\"false\")+\") {\\n\";Blockly.JavaScript.STATEMENT_SUFFIX&&(b+=Blockly.JavaScript.prefixLines(Blockly.JavaScript.injectId(Blockly.JavaScript.STATEMENT_SUFFIX,a),Blockly.JavaScript.INDENT));a.hasReturnValue_?(a=Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_NONE)||\"null\",b+=Blockly.JavaScript.INDENT+\"return \"+a+\";\\n\"):b+=Blockly.JavaScript.INDENT+\n\"return;\\n\";return b+\"}\\n\"};Blockly.JavaScript.texts={};Blockly.JavaScript.text=function(a){return[Blockly.JavaScript.quote_(a.getFieldValue(\"TEXT\")),Blockly.JavaScript.ORDER_ATOMIC]};Blockly.JavaScript.text_multiline=function(a){a=Blockly.JavaScript.multiline_quote_(a.getFieldValue(\"TEXT\"));var b=-1!=a.indexOf(\"+\")?Blockly.JavaScript.ORDER_ADDITION:Blockly.JavaScript.ORDER_ATOMIC;return[a,b]};\nBlockly.JavaScript.text.forceString_=function(a){return Blockly.JavaScript.text.forceString_.strRegExp.test(a)?[a,Blockly.JavaScript.ORDER_ATOMIC]:[\"String(\"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.text.forceString_.strRegExp=/^\\s*'([^']|\\\\')*'\\s*$/;\nBlockly.JavaScript.text_join=function(a){switch(a.itemCount_){case 0:return[\"''\",Blockly.JavaScript.ORDER_ATOMIC];case 1:return a=Blockly.JavaScript.valueToCode(a,\"ADD0\",Blockly.JavaScript.ORDER_NONE)||\"''\",Blockly.JavaScript.text.forceString_(a);case 2:var b=Blockly.JavaScript.valueToCode(a,\"ADD0\",Blockly.JavaScript.ORDER_NONE)||\"''\";a=Blockly.JavaScript.valueToCode(a,\"ADD1\",Blockly.JavaScript.ORDER_NONE)||\"''\";a=Blockly.JavaScript.text.forceString_(b)[0]+\" + \"+Blockly.JavaScript.text.forceString_(a)[0];\nreturn[a,Blockly.JavaScript.ORDER_ADDITION];default:b=Array(a.itemCount_);for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.JavaScript.valueToCode(a,\"ADD\"+c,Blockly.JavaScript.ORDER_NONE)||\"''\";a=\"[\"+b.join(\",\")+\"].join('')\";return[a,Blockly.JavaScript.ORDER_FUNCTION_CALL]}};\nBlockly.JavaScript.text_append=function(a){var b=Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME);a=Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\";return b+\" += \"+Blockly.JavaScript.text.forceString_(a)[0]+\";\\n\"};Blockly.JavaScript.text_length=function(a){return[(Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".length\",Blockly.JavaScript.ORDER_MEMBER]};\nBlockly.JavaScript.text_isEmpty=function(a){return[\"!\"+(Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".length\",Blockly.JavaScript.ORDER_LOGICAL_NOT]};\nBlockly.JavaScript.text_indexOf=function(a){var b=\"FIRST\"==a.getFieldValue(\"END\")?\"indexOf\":\"lastIndexOf\",c=Blockly.JavaScript.valueToCode(a,\"FIND\",Blockly.JavaScript.ORDER_NONE)||\"''\";b=(Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".\"+b+\"(\"+c+\")\";return a.workspace.options.oneBasedIndex?[b+\" + 1\",Blockly.JavaScript.ORDER_ADDITION]:[b,Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.text_charAt=function(a){var b=a.getFieldValue(\"WHERE\")||\"FROM_START\",c=Blockly.JavaScript.valueToCode(a,\"VALUE\",\"RANDOM\"==b?Blockly.JavaScript.ORDER_NONE:Blockly.JavaScript.ORDER_MEMBER)||\"''\";switch(b){case \"FIRST\":return[c+\".charAt(0)\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case \"LAST\":return[c+\".slice(-1)\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case \"FROM_START\":return a=Blockly.JavaScript.getAdjusted(a,\"AT\"),[c+\".charAt(\"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case \"FROM_END\":return a=\nBlockly.JavaScript.getAdjusted(a,\"AT\",1,!0),[c+\".slice(\"+a+\").charAt(0)\",Blockly.JavaScript.ORDER_FUNCTION_CALL];case \"RANDOM\":return[Blockly.JavaScript.provideFunction_(\"textRandomLetter\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(text) {\",\"  var x = Math.floor(Math.random() * text.length);\",\"  return text[x];\",\"}\"])+\"(\"+c+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]}throw Error(\"Unhandled option (text_charAt).\");};\nBlockly.JavaScript.text.getIndex_=function(a,b,c){return\"FIRST\"==b?\"0\":\"FROM_END\"==b?a+\".length - 1 - \"+c:\"LAST\"==b?a+\".length - 1\":c};\nBlockly.JavaScript.text_getSubstring=function(a){var b=a.getFieldValue(\"WHERE1\"),c=a.getFieldValue(\"WHERE2\"),d=\"FROM_END\"!=b&&\"LAST\"!=b&&\"FROM_END\"!=c&&\"LAST\"!=c,e=Blockly.JavaScript.valueToCode(a,\"STRING\",d?Blockly.JavaScript.ORDER_MEMBER:Blockly.JavaScript.ORDER_NONE)||\"''\";if(\"FIRST\"==b&&\"LAST\"==c)return[e,Blockly.JavaScript.ORDER_NONE];if(e.match(/^'?\\w+'?$/)||d){switch(b){case \"FROM_START\":d=Blockly.JavaScript.getAdjusted(a,\"AT1\");break;case \"FROM_END\":d=Blockly.JavaScript.getAdjusted(a,\"AT1\",\n1,!1,Blockly.JavaScript.ORDER_SUBTRACTION);d=e+\".length - \"+d;break;case \"FIRST\":d=\"0\";break;default:throw Error(\"Unhandled option (text_getSubstring).\");}switch(c){case \"FROM_START\":a=Blockly.JavaScript.getAdjusted(a,\"AT2\",1);break;case \"FROM_END\":a=Blockly.JavaScript.getAdjusted(a,\"AT2\",0,!1,Blockly.JavaScript.ORDER_SUBTRACTION);a=e+\".length - \"+a;break;case \"LAST\":a=e+\".length\";break;default:throw Error(\"Unhandled option (text_getSubstring).\");}b=e+\".slice(\"+d+\", \"+a+\")\"}else{d=Blockly.JavaScript.getAdjusted(a,\n\"AT1\");a=Blockly.JavaScript.getAdjusted(a,\"AT2\");var f=Blockly.JavaScript.text.getIndex_,g={FIRST:\"First\",LAST:\"Last\",FROM_START:\"FromStart\",FROM_END:\"FromEnd\"};b=Blockly.JavaScript.provideFunction_(\"subsequence\"+g[b]+g[c],[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(sequence\"+(\"FROM_END\"==b||\"FROM_START\"==b?\", at1\":\"\")+(\"FROM_END\"==c||\"FROM_START\"==c?\", at2\":\"\")+\") {\",\"  var start = \"+f(\"sequence\",b,\"at1\")+\";\",\"  var end = \"+f(\"sequence\",c,\"at2\")+\" + 1;\",\"  return sequence.slice(start, end);\",\n\"}\"])+\"(\"+e+(\"FROM_END\"==b||\"FROM_START\"==b?\", \"+d:\"\")+(\"FROM_END\"==c||\"FROM_START\"==c?\", \"+a:\"\")+\")\"}return[b,Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.text_changeCase=function(a){var b={UPPERCASE:\".toUpperCase()\",LOWERCASE:\".toLowerCase()\",TITLECASE:null}[a.getFieldValue(\"CASE\")];a=Blockly.JavaScript.valueToCode(a,\"TEXT\",b?Blockly.JavaScript.ORDER_MEMBER:Blockly.JavaScript.ORDER_NONE)||\"''\";return[b?a+b:Blockly.JavaScript.provideFunction_(\"textToTitleCase\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(str) {\",\"  return str.replace(/\\\\S+/g,\",\"      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\",\n\"}\"])+\"(\"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.text_trim=function(a){var b={LEFT:\".replace(/^[\\\\s\\\\xa0]+/, '')\",RIGHT:\".replace(/[\\\\s\\\\xa0]+$/, '')\",BOTH:\".trim()\"}[a.getFieldValue(\"MODE\")];return[(Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+b,Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.text_print=function(a){return\"window.alert(\"+(Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\")+\");\\n\"};\nBlockly.JavaScript.text_prompt_ext=function(a){var b=\"window.prompt(\"+(a.getField(\"TEXT\")?Blockly.JavaScript.quote_(a.getFieldValue(\"TEXT\")):Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\")+\")\";\"NUMBER\"==a.getFieldValue(\"TYPE\")&&(b=\"Number(\"+b+\")\");return[b,Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.text_prompt=Blockly.JavaScript.text_prompt_ext;\nBlockly.JavaScript.text_count=function(a){var b=Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\";a=Blockly.JavaScript.valueToCode(a,\"SUB\",Blockly.JavaScript.ORDER_NONE)||\"''\";return[Blockly.JavaScript.provideFunction_(\"textCount\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle) {\",\"  if (needle.length === 0) {\",\"    return haystack.length + 1;\",\"  } else {\",\"    return haystack.split(needle).length - 1;\",\"  }\",\"}\"])+\"(\"+b+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};\nBlockly.JavaScript.text_replace=function(a){var b=Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_NONE)||\"''\",c=Blockly.JavaScript.valueToCode(a,\"FROM\",Blockly.JavaScript.ORDER_NONE)||\"''\";a=Blockly.JavaScript.valueToCode(a,\"TO\",Blockly.JavaScript.ORDER_NONE)||\"''\";return[Blockly.JavaScript.provideFunction_(\"textReplace\",[\"function \"+Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_+\"(haystack, needle, replacement) {\",'  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")',\n'                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");',\"  return haystack.replace(new RegExp(needle, 'g'), replacement);\",\"}\"])+\"(\"+b+\", \"+c+\", \"+a+\")\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.text_reverse=function(a){return[(Blockly.JavaScript.valueToCode(a,\"TEXT\",Blockly.JavaScript.ORDER_MEMBER)||\"''\")+\".split('').reverse().join('')\",Blockly.JavaScript.ORDER_FUNCTION_CALL]};Blockly.JavaScript.variables={};Blockly.JavaScript.variables_get=function(a){return[Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME),Blockly.JavaScript.ORDER_ATOMIC]};Blockly.JavaScript.variables_set=function(a){var b=Blockly.JavaScript.valueToCode(a,\"VALUE\",Blockly.JavaScript.ORDER_ASSIGNMENT)||\"0\";return Blockly.JavaScript.nameDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME)+\" = \"+b+\";\\n\"};Blockly.JavaScript.variablesDynamic={};Blockly.JavaScript.variables_get_dynamic=Blockly.JavaScript.variables_get;Blockly.JavaScript.variables_set_dynamic=Blockly.JavaScript.variables_set;\nreturn Blockly.JavaScript;\n}));\n\n\n//# sourceMappingURL=javascript_compressed.js.map\n"]},"metadata":{},"sourceType":"script"}